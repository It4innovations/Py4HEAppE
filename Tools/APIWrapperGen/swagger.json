{
  "openapi": "3.0.1",
  "info": {
    "title": "py4heappe API",
    "description": "Merged API documentation for py4heappe client",
    "termsOfService": "https://heappe.eu",
    "contact": {
      "name": "IT4Innovations",
      "url": "https://twitter.com/it4innovations",
      "email": "support.heappe@it4i.cz"
    },
    "license": {
      "name": "GNU General Public License v3.0",
      "url": "https://www.gnu.org/licenses/gpl-3.0.html"
    },
    "version": "v6.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "paths": {
    "/heappe/ClusterInformation/ListAvailableClusters": {
      "get": {
        "tags": [
          "ClusterInformation"
        ],
        "summary": "Get available clusters",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClusterName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NodeTypeName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProjectName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AccountingString",
            "in": "query",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CommandTemplateName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ForceRefresh",
            "in": "query",
            "description": "",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/ClusterInformation/ListAvailableClustersClearCache": {
      "post": {
        "tags": [
          "ClusterInformation"
        ],
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/ClusterInformation/RequestCommandTemplateParametersName": {
      "post": {
        "tags": [
          "ClusterInformation"
        ],
        "summary": "Get command template parameters name",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCommandTemplateParametersNameModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCommandTemplateParametersNameModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCommandTemplateParametersNameModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/ClusterInformation/CurrentClusterNodeUsage": {
      "get": {
        "tags": [
          "ClusterInformation"
        ],
        "summary": "Get actual cluster node usage",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "Session code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ClusterNodeId",
            "in": "query",
            "description": "ClusterNode ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ProjectId",
            "in": "query",
            "description": "Project ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterNodeUsageExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/DataTransfer/RequestDataTransfer": {
      "post": {
        "tags": [
          "DataTransfer"
        ],
        "summary": "Create Data Transfer",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetDataTransferMethodModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetDataTransferMethodModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetDataTransferMethodModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataTransferMethodExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/DataTransfer/CloseDataTransfer": {
      "post": {
        "tags": [
          "DataTransfer"
        ],
        "summary": "CLose Data Transfer",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndDataTransferModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EndDataTransferModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EndDataTransferModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/DataTransfer/HttpGetToJobNode": {
      "post": {
        "tags": [
          "DataTransfer"
        ],
        "summary": "Send HTTP GET to Job node",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpGetToJobNodeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpGetToJobNodeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HttpGetToJobNodeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/DataTransfer/HttpPostToJobNode": {
      "post": {
        "tags": [
          "DataTransfer"
        ],
        "summary": "Send HTTP POST to Job node",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpPostToJobNodeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HttpPostToJobNodeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HttpPostToJobNodeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/FileTransfer/RequestFileTransfer": {
      "post": {
        "tags": [
          "FileTransfer"
        ],
        "summary": "Create file transfer tunnel",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetFileTransferMethodModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetFileTransferMethodModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetFileTransferMethodModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileTransferMethodExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/FileTransfer/CloseFileTransfer": {
      "post": {
        "tags": [
          "FileTransfer"
        ],
        "summary": "Close file transfer tunnel",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EndFileTransferModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EndFileTransferModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EndFileTransferModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/FileTransfer/DownloadPartsOfJobFilesFromCluster": {
      "post": {
        "tags": [
          "FileTransfer"
        ],
        "summary": "Download part of job files from Cluster",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadPartsOfJobFilesFromClusterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadPartsOfJobFilesFromClusterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadPartsOfJobFilesFromClusterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobFileContentExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/FileTransfer/ListChangedFilesForJob": {
      "get": {
        "tags": [
          "FileTransfer"
        ],
        "summary": "Get all changes files during job execution",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "Session code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubmittedJobInfoId",
            "in": "query",
            "description": "SubmittedJobInfo ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileInformationExt"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/FileTransfer/DownloadFileFromCluster": {
      "post": {
        "tags": [
          "FileTransfer"
        ],
        "summary": "Download specific file from Cluster",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadFileFromClusterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadFileFromClusterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DownloadFileFromClusterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Health": {
      "get": {
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthExt"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobManagement/CreateJob": {
      "post": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Create job specification",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobByProjectModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobByProjectModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobByProjectModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmittedJobInfoExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobManagement/SubmitJob": {
      "put": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Submit job",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitJobModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitJobModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitJobModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmittedJobInfoExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobManagement/CancelJob": {
      "put": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Cancel job",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelJobModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelJobModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelJobModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmittedJobInfoExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobManagement/DeleteJob": {
      "delete": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Delete job",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteJobModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteJobModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteJobModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobManagement/ListJobsForCurrentUser": {
      "get": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Get all jobs for user",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "Session code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "JobStates",
            "in": "query",
            "description": "Job states separated by coma; eg.: \"1,2,8,32\", \"Configuring,Submitted,Running,Failed\",\r\n\"1,2,Running,Failed\" etc.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubmittedJobInfoExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobManagement/CurrentInfoForJob": {
      "get": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Get current info for job",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "Session code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubmittedJobInfoId",
            "in": "query",
            "description": "SubmittedJobInfo ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmittedJobInfoExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobManagement/CopyJobDataToTemp": {
      "post": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Copy job data to temp folder",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyJobDataToTempModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyJobDataToTempModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyJobDataToTempModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobManagement/CopyJobDataFromTemp": {
      "post": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Copy job data from temp folder",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyJobDataFromTempModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CopyJobDataFromTempModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CopyJobDataFromTempModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobManagement/AllocatedNodesIPs": {
      "get": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Get Allocated Nodes IPs",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "Session code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SubmittedTaskInfoId",
            "in": "query",
            "description": "SubmittedTaskInfo ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobReporting/ListAdaptorUserGroups": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get user groups",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "Session code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupListReportExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobReporting/UserResourceUsageReport": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get resource usage report for user",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "StartTime",
            "in": "query",
            "description": "StartTime",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndTime",
            "in": "query",
            "description": "EndTime",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SubProjects",
            "in": "query",
            "description": "SubProjects",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "SessionCode",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectReportExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobReporting/UserGroupResourceUsageReport": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get resource usage for user group",
        "parameters": [
          {
            "name": "GroupId",
            "in": "query",
            "description": "Group ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "StartTime",
            "in": "query",
            "description": "StartTime",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndTime",
            "in": "query",
            "description": "EndTime",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SubProjects",
            "in": "query",
            "description": "SubProjects",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "SessionCode",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectReportExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobReporting/ResourceUsageReportForJob": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get resource usage for executed job",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "Session code",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "JobId",
            "in": "query",
            "description": "Job ID",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExtendedReportExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobReporting/JobsStateAgregationReport": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get job state aggregation report",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "Session code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JobStateAggregationReportExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobReporting/AggregatedUserGroupResourceUsageReport": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get aggregated resource report usage for user groups",
        "parameters": [
          {
            "name": "StartTime",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "EndTime",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectAggregatedReportExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/JobReporting/JobsDetailedReport": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get job detailed report",
        "parameters": [
          {
            "name": "SubProjects",
            "in": "query",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "TimeFrom",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TimeTo",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDetailedReportExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/InstanceInformation": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get HEAppE Information",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "SessionCode",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstanceInformationExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/VersionInformation": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get HEAppE Version Information",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "SessionCode",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionInformationExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/CommandTemplate": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List Command Template",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedCommandTemplateExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create Static Command Template",
        "requestBody": {
          "description": "CreateCommandTemplateModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandTemplateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandTemplateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandTemplateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedCommandTemplateExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify Static Command Template",
        "requestBody": {
          "description": "ModifyCommandTemplateModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCommandTemplateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCommandTemplateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCommandTemplateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedCommandTemplateExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/CommandTemplates": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List Command Templates",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProjectId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExtendedCommandTemplateExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/CommandTemplateFromGeneric": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create Command Template from Generic Command Template",
        "requestBody": {
          "description": "CreateCommandTemplateFromGenericModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandTemplateFromGenericModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandTemplateFromGenericModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandTemplateFromGenericModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandTemplateExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify Command Template based on Generic Command Template",
        "requestBody": {
          "description": "ModifyCommandTemplateFromGenericModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCommandTemplateFromGenericModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCommandTemplateFromGenericModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCommandTemplateFromGenericModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommandTemplateExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/RemoveCommandTemplate": {
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove Command Template",
        "requestBody": {
          "description": "RemoveCommandTemplateModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveCommandTemplateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveCommandTemplateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveCommandTemplateModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/CommandTemplateParameter": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get Command Template Parameter by id",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedCommandTemplateParameterExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create a new Command Template Parameter",
        "requestBody": {
          "description": "CreateCommandTemplateModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandTemplateParameterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandTemplateParameterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandTemplateParameterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedCommandTemplateParameterExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify an existing Command Template Parameter",
        "requestBody": {
          "description": "ModifyCommandTemplateParameterModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCommandTemplateParameterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCommandTemplateParameterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyCommandTemplateParameterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedCommandTemplateParameterExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove an existing Command Template Parameter",
        "requestBody": {
          "description": "RemoveCommandTemplateParameterModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveCommandTemplateParameterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveCommandTemplateParameterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveCommandTemplateParameterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ProjectsByAccountingStrings": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get project by accounting string",
        "parameters": [
          {
            "name": "AccountingString",
            "in": "query",
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/Projects": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List Projects",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/Project": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get Project by id",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create project",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify project",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyProjectModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyProjectModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyProjectModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove project",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProjectModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProjectModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProjectModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ProjectAssignmentToCluster": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ProjectAssignmentToCluster by id",
        "parameters": [
          {
            "name": "ProjectId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ClusterId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterProjectExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Assign project to the cluster",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectAssignmentToClusterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectAssignmentToClusterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectAssignmentToClusterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterProjectExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify project assignment to the cluster",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyProjectAssignmentToClusterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyProjectAssignmentToClusterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyProjectAssignmentToClusterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterProjectExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove project assignment to the cluster",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProjectAssignmentToClusterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProjectAssignmentToClusterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProjectAssignmentToClusterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ProjectAssignmentToClusters": {
      "get": {
        "tags": [
          "Management"
        ],
        "parameters": [
          {
            "name": "ProjectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterProjectExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/Cluster": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get Cluster by id",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedClusterExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create Cluster",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedClusterExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Update Cluster",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtendedClusterExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove Cluster",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/Clusters": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get all clusters",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExtendedClusterExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterNodeTypes": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List ClusterNodeTypes",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterNodeTypeExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterNodeType": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ClusterNodeType by id",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterNodeTypeExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create ClusterNodeType",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterNodeTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterNodeTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterNodeTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterNodeTypeExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify ClusterNodeType",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterNodeTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterNodeTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterNodeTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterNodeTypeExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove ClusterNodeType",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterNodeTypeModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterNodeTypeModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterNodeTypeModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterProxyConnection": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ClusterProxyConnection by id",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterProxyConnectionExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create ClusterProxyConnection",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterProxyConnectionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterProxyConnectionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterProxyConnectionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterProxyConnectionExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify ClusterProxyConnection",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterProxyConnectionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterProxyConnectionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterProxyConnectionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterProxyConnectionExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove ClusterProxyConnection",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterProxyConnectionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterProxyConnectionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterProxyConnectionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterProxyConnections": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ClusterProxyConnections",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterProxyConnectionExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/FileTransferMethods": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List FileTransferMethods",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FileTransferMethodNoCredentialsExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/FileTransferMethod": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get FileTransferMethod by id",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileTransferMethodNoCredentialsExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create FileTransferMethod",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileTransferMethodModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileTransferMethodModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFileTransferMethodModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileTransferMethodNoCredentialsExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify FileTransferMethod",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyFileTransferMethodModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyFileTransferMethodModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyFileTransferMethodModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileTransferMethodNoCredentialsExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove FileTransferMethod",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveFileTransferMethodModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveFileTransferMethodModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveFileTransferMethodModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterNodeTypeAggregation": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ClusterNodeTypeAggregation by id",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterNodeTypeAggregationExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create ClusterNodeTypeAggregations",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterNodeTypeAggregationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterNodeTypeAggregationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterNodeTypeAggregationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterNodeTypeAggregationExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify ClusterNodeTypeAggregations",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterNodeTypeAggregationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterNodeTypeAggregationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterNodeTypeAggregationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterNodeTypeAggregationExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove ClusterNodeTypeAggregation",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterNodeTypeAggregationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterNodeTypeAggregationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterNodeTypeAggregationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterNodeTypeAggregations": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get all ClusterNodeTypeAggregations",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterNodeTypeAggregationExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterNodeTypeAggregationAccountings": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List ClusterNodeTypeAggregationAccountings",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterNodeTypeAggregationAccountingExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterNodeTypeAggregationAccounting": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ClusterNodeTypeAggregationAccounting by id",
        "parameters": [
          {
            "name": "ClusterNodeTypeAggregationId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "AccountingId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterNodeTypeAggregationAccountingExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create ClusterNodeTypeAggregationAccounting",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterNodeTypeAggregationAccountingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterNodeTypeAggregationAccountingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClusterNodeTypeAggregationAccountingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClusterNodeTypeAggregationAccountingExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove ClusterNodeTypeAggregationAccounting",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterNodeTypeAggregationAccountingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterNodeTypeAggregationAccountingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveClusterNodeTypeAggregationAccountingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/Accountings": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List Accountings",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountingExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/Accounting": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get Accounting by id",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create Accounting",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify Accounting",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyAccountingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyAccountingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyAccountingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove Accounting",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveAccountingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveAccountingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveAccountingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ProjectClusterNodeTypeAggregation": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ProjectClusterNodeTypeAggregation by id",
        "parameters": [
          {
            "name": "ProjectId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "ClusterNodeTypeAggregationId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectClusterNodeTypeAggregationExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create ProjectClusterNodeTypeAggregation",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectClusterNodeTypeAggregationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectClusterNodeTypeAggregationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectClusterNodeTypeAggregationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectClusterNodeTypeAggregationExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify ProjectClusterNodeTypeAggregation",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyProjectClusterNodeTypeAggregationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyProjectClusterNodeTypeAggregationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyProjectClusterNodeTypeAggregationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectClusterNodeTypeAggregationExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove ProjectClusterNodeTypeAggregation",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProjectClusterNodeTypeAggregationModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProjectClusterNodeTypeAggregationModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveProjectClusterNodeTypeAggregationModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ProjectClusterNodeTypeAggregations": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ProjectClusterNodeTypeAggregations by ProjectId",
        "parameters": [
          {
            "name": "ProjectId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectClusterNodeTypeAggregationExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/SubProjects": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List SubProjects",
        "parameters": [
          {
            "name": "ProjectId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SubProjectExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/SubProject": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List SubProject",
        "parameters": [
          {
            "name": "SubProjectId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubProjectExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create SubProject",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubProjectModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubProjectModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubProjectModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubProjectExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify SubProject",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifySubProjectModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifySubProjectModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifySubProjectModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubProjectExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove SubProject",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSubProjectModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSubProjectModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSubProjectModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/SecureShellKey": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Generate SSH key",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSecureShellKeyModelObsolete"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSecureShellKeyModelObsolete"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSecureShellKeyModelObsolete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Regenerate SSH key",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateSecureShellKeyModelObsolete"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateSecureShellKeyModelObsolete"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateSecureShellKeyModelObsolete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove SSH key",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSecureShellKeyModelObsolete"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSecureShellKeyModelObsolete"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSecureShellKeyModelObsolete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/heappe/Management/SecureShellKeys": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get SSH keys for project",
        "parameters": [
          {
            "name": "ProjectId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/GenerateSecureShellKey": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Generate SSH key",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSecureShellKeyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSecureShellKeyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSecureShellKeyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ModifyClusterAuthenticationCredential": {
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify Cluster Authentication Credential",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterAuthenticationCredentialModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterAuthenticationCredentialModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyClusterAuthenticationCredentialModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PublicKeyExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/RegenerateSecureShellKey": {
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Regenerate SSH key",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateSecureShellKeyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateSecureShellKeyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegenerateSecureShellKeyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/RemoveSecureShellKey": {
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove SSH key",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSecureShellKeyModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSecureShellKeyModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveSecureShellKeyModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/InitializeClusterScriptDirectory": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Initialize cluster script directory for SSH HPC Account",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitializeClusterScriptDirectoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/InitializeClusterScriptDirectoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/InitializeClusterScriptDirectoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterInitReportExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/TestClusterAccessForAccount": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Test cluster access for robot account",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestClusterAccessForAccountModelObsolete"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TestClusterAccessForAccountModelObsolete"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TestClusterAccessForAccountModelObsolete"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Test cluster access for robot account",
        "parameters": [
          {
            "name": "Username",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProjectId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterAccessReportExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterAccountStatus": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "",
        "parameters": [
          {
            "name": "Username",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ProjectId",
            "in": "query",
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClusterAccountStatusExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/ComputeAccounting": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Compute accounting - calculate accounting via accounting formulas",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputeAccountingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputeAccountingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ComputeAccountingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/Management/AccountingState": {
      "post": {
        "tags": [
          "Management"
        ],
        "parameters": [
          {
            "name": "ProjectId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "SessionCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountingStateExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/AuthenticateLexisToken": {
      "post": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Provide user authentication via OpenId token.",
        "requestBody": {
          "description": "Authentication credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateLexisTokenModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateLexisTokenModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateLexisTokenModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/AuthenticateUserOpenId": {
      "post": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Provide user authentication via OpenId token.",
        "requestBody": {
          "description": "Authentication credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserOpenIdModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserOpenIdModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserOpenIdModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/AuthenticateUserOpenStack": {
      "post": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Provide user authentication to OpenStack.",
        "requestBody": {
          "description": "Authentication credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserOpenIdOpenStackModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserOpenIdOpenStackModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserOpenIdOpenStackModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenStackApplicationCredentialsExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/AuthenticateUserPassword": {
      "post": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Provide user authentication",
        "requestBody": {
          "description": "Authentication credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserPasswordModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserPasswordModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserPasswordModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/AuthenticateUserDigitalSignature": {
      "post": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Provide user authentication",
        "requestBody": {
          "description": "Authentication credentials",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserDigitalSignatureModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserDigitalSignatureModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateUserDigitalSignatureModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/CurrentUsageAndLimitationsForCurrentUser": {
      "get": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Get current resource usage",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "Session code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectResourceUsageExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/ProjectsForCurrentUser": {
      "get": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Get projects for current user",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectReferenceExt"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/CurrentUserInfo": {
      "get": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Get current user info",
        "parameters": [
          {
            "name": "SessionCode",
            "in": "query",
            "description": "Session code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdaptorUserExt"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "413": {
            "description": "Content Too Large",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountingExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Formula": {
            "type": "string",
            "description": "Formula",
            "nullable": true
          },
          "CreatedAt": {
            "type": "string",
            "description": "Created at date",
            "format": "date-time"
          },
          "ModifiedAt": {
            "type": "string",
            "description": "Modified at date",
            "format": "date-time",
            "nullable": true
          },
          "ValidityFrom": {
            "type": "string",
            "description": "Validity from date",
            "format": "date-time"
          },
          "ValidityTo": {
            "type": "string",
            "description": "Validity to date",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountingStateExt": {
        "type": "object",
        "properties": {
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "State": {
            "$ref": "#/components/schemas/AccountingStateTypeExt"
          },
          "ComputingStartDate": {
            "type": "string",
            "description": "Comuputing start date",
            "format": "date-time"
          },
          "ComputingEndDate": {
            "type": "string",
            "description": "Comuputing end date",
            "format": "date-time",
            "nullable": true
          },
          "TriggeredAt": {
            "type": "string",
            "description": "Triggered at",
            "format": "date-time"
          },
          "LastUpdatedAt": {
            "type": "string",
            "description": "Last updated at",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountingStateTypeExt": {
        "enum": [
          0,
          1,
          2,
          4,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "AdaptorUserExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "description": "Username",
            "nullable": true
          },
          "PublicKey": {
            "type": "string",
            "description": "Public key",
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "UserType": {
            "$ref": "#/components/schemas/AdaptorUserTypeExt"
          },
          "AdaptorUserGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdaptorUserGroupExt"
            },
            "description": "Array of adaptor user groups",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdaptorUserGroupExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "Project": {
            "$ref": "#/components/schemas/ProjectExt"
          },
          "Roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of roles",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AdaptorUserRoleExt": {
        "required": [
          "Description",
          "Name"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name"
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Description"
          }
        },
        "additionalProperties": false
      },
      "AdaptorUserTypeExt": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "AuthenticateLexisTokenModel": {
        "type": "object",
        "properties": {
          "Credentials": {
            "$ref": "#/components/schemas/LexisCredentialsExt"
          }
        },
        "additionalProperties": false
      },
      "AuthenticateUserDigitalSignatureModel": {
        "type": "object",
        "properties": {
          "Credentials": {
            "$ref": "#/components/schemas/DigitalSignatureCredentialsExt"
          }
        },
        "additionalProperties": false
      },
      "AuthenticateUserOpenIdModel": {
        "type": "object",
        "properties": {
          "Credentials": {
            "$ref": "#/components/schemas/OpenIdCredentialsExt"
          }
        },
        "additionalProperties": false
      },
      "AuthenticateUserOpenIdOpenStackModel": {
        "type": "object",
        "properties": {
          "Credentials": {
            "$ref": "#/components/schemas/OpenIdCredentialsExt"
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "AuthenticateUserPasswordModel": {
        "type": "object",
        "properties": {
          "Credentials": {
            "$ref": "#/components/schemas/PasswordCredentialsExt"
          }
        },
        "additionalProperties": false
      },
      "BadRequestResult": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CancelJobModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "SubmittedJobInfoId": {
            "type": "integer",
            "description": "Subbmited job info id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ClusterAccessReportExt": {
        "type": "object",
        "properties": {
          "ClusterName": {
            "type": "string",
            "description": "Cluster name",
            "nullable": true
          },
          "IsClusterAccessible": {
            "type": "boolean",
            "description": "Is cluster accessible"
          }
        },
        "additionalProperties": false
      },
      "ClusterAccountStatusExt": {
        "type": "object",
        "properties": {
          "Cluster": {
            "$ref": "#/components/schemas/ClusterExt"
          },
          "Project": {
            "$ref": "#/components/schemas/ProjectExt"
          },
          "IsInitialized": {
            "type": "boolean",
            "description": "Is initialized"
          }
        },
        "additionalProperties": false
      },
      "ClusterAggregatedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "ClusterNodeTypesAggregations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterNodeTypeAggregatedReportExt"
            },
            "description": "List of cluster node type aggregated reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterAuthenticationCredentialsAuthTypeExt": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "type": "integer",
        "format": "int32"
      },
      "ClusterConnectionProtocol": {
        "enum": [
          1,
          2,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ClusterConnectionProtocolExt": {
        "enum": [
          1,
          2,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ClusterDetailedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "ClusterNodeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterNodeTypeDetailedReportExt"
            },
            "description": "List of cluster node type detailed reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "FileTransferMethodIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "File transfer ids",
            "nullable": true
          },
          "NodeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterNodeTypeExt"
            },
            "description": "Array of node types",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterExtendedReportExt": {
        "required": [
          "Description"
        ],
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "minLength": 1,
            "type": "string",
            "description": "Description"
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "ClusterNodeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterNodeExtendedTypeReportExt"
            },
            "description": "List of cluster node extended type reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterInitReportExt": {
        "type": "object",
        "properties": {
          "ClusterName": {
            "type": "string",
            "description": "Cluster name",
            "nullable": true
          },
          "IsClusterInitialized": {
            "type": "boolean",
            "description": "Is cluster initialized"
          }
        },
        "additionalProperties": false
      },
      "ClusterNodeExtendedTypeReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "Jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobExtendedReportExt"
            },
            "description": "List of job extended reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterNodeTypeAggregatedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Id",
            "nullable": true
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "ClusterNodeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterNodeTypeReportExt"
            },
            "description": "List of cluster node type reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterNodeTypeAggregationAccountingExt": {
        "type": "object",
        "properties": {
          "ClusterNodeTypeAggregationId": {
            "type": "integer",
            "description": "Cluster node type aggregation id",
            "format": "int64"
          },
          "AccountingId": {
            "type": "integer",
            "description": "Accounting id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ClusterNodeTypeAggregationExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "AllocationType": {
            "type": "string",
            "description": "Allocation type",
            "nullable": true
          },
          "ValidityFrom": {
            "type": "string",
            "description": "Valid from",
            "format": "date-time"
          },
          "ValidityTo": {
            "type": "string",
            "description": "Valid to",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterNodeTypeDetailedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "QueueName": {
            "type": "string",
            "description": "Queue name",
            "nullable": true
          },
          "Jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobDetailedReportExt"
            },
            "description": "List of job detailed reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterNodeTypeExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "ClusterId": {
            "type": "integer",
            "description": "Cluster id",
            "format": "int64",
            "nullable": true
          },
          "NumberOfNodes": {
            "type": "integer",
            "description": "Number of nodes",
            "format": "int32",
            "nullable": true
          },
          "CoresPerNode": {
            "type": "integer",
            "description": "Number of cores per node",
            "format": "int32",
            "nullable": true
          },
          "MaxWalltime": {
            "type": "integer",
            "description": "Maximum of walltime",
            "format": "int32",
            "nullable": true
          },
          "FileTransferMethodId": {
            "type": "integer",
            "description": "File transfer id",
            "format": "int64",
            "nullable": true
          },
          "Queue": {
            "type": "string",
            "description": "Queue",
            "nullable": true
          },
          "QualityOfService": {
            "type": "string",
            "description": "Quality of service",
            "nullable": true
          },
          "ClusterAllocationName": {
            "type": "string",
            "description": "Cluster allocation name",
            "nullable": true
          },
          "ClusterNodeTypeAggregation": {
            "$ref": "#/components/schemas/ClusterNodeTypeAggregationExt"
          },
          "Accounting": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountingExt"
            },
            "description": "Accounting",
            "nullable": true
          },
          "Projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectExt"
            },
            "description": "Array of projects",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterNodeTypeForTaskExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "Project": {
            "$ref": "#/components/schemas/ProjectForTaskExt"
          }
        },
        "additionalProperties": false
      },
      "ClusterNodeTypeReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "Jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobReportExt"
            },
            "description": "List of job reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterNodeTypeResourceUsageExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "NumberOfNodes": {
            "type": "integer",
            "description": "Number of nodes",
            "format": "int32",
            "nullable": true
          },
          "CoresPerNode": {
            "type": "integer",
            "description": "Number of cores per node",
            "format": "int32",
            "nullable": true
          },
          "MaxWalltime": {
            "type": "integer",
            "description": "Maximum walltime",
            "format": "int32",
            "nullable": true
          },
          "FileTransferMethodId": {
            "type": "integer",
            "description": "File transfer method id",
            "format": "int64",
            "nullable": true
          },
          "NodeUsedCoresAndLimitation": {
            "$ref": "#/components/schemas/NodeUsedCoresAndLimitationExt"
          }
        },
        "additionalProperties": false
      },
      "ClusterNodeUsageExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "Priority": {
            "type": "integer",
            "description": "Priority",
            "format": "int32",
            "nullable": true
          },
          "CoresPerNode": {
            "type": "integer",
            "description": "Number of cores per node",
            "format": "int32",
            "nullable": true
          },
          "MaxWalltime": {
            "type": "integer",
            "description": "Maximum walltime",
            "format": "int32",
            "nullable": true
          },
          "NumberOfNodes": {
            "type": "integer",
            "description": "Number of nodes",
            "format": "int32",
            "nullable": true
          },
          "NumberOfUsedNodes": {
            "type": "integer",
            "description": "Number of used nodes",
            "format": "int32",
            "nullable": true
          },
          "TotalJobs": {
            "type": "integer",
            "description": "Total jobs number",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterProjectExt": {
        "type": "object",
        "properties": {
          "ClusterId": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "ScratchStoragePath": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Scratch Storage Path",
            "nullable": true
          },
          "PermanentStoragePath": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Permanent Storage Path",
            "nullable": true
          },
          "CreatedAt": {
            "type": "string",
            "description": "Created at",
            "format": "date-time"
          },
          "ModifiedAt": {
            "type": "string",
            "description": "Modified at",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterProxyConnectionExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Host": {
            "type": "string",
            "description": "Host",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "description": "Port number",
            "format": "int32"
          },
          "Type": {
            "$ref": "#/components/schemas/ProxyTypeExt"
          },
          "Username": {
            "type": "string",
            "description": "Username",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "description": "Password",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClusterReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "ClusterNodeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterNodeTypeReportExt"
            },
            "description": "List of cluster node type reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandTemplateExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "ExtendedAllocationCommand": {
            "type": "string",
            "description": "Extended allocation command",
            "nullable": true
          },
          "IsGeneric": {
            "type": "boolean",
            "description": "Is generic"
          },
          "IsEnabled": {
            "type": "boolean",
            "description": "Is enabled"
          },
          "CreatedFromGenericTemplateId": {
            "type": "integer",
            "description": "Created from generic template id",
            "format": "int64",
            "nullable": true
          },
          "TemplateParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandTemplateParameterExt"
            },
            "description": "Array of command template parameters",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandTemplateParameterExt": {
        "type": "object",
        "properties": {
          "Identifier": {
            "type": "string",
            "description": "Identifier",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CommandTemplateParameterValueExt": {
        "type": "object",
        "properties": {
          "CommandParameterIdentifier": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Command parameter identifier",
            "nullable": true
          },
          "ParameterValue": {
            "maxLength": 100000,
            "minLength": 0,
            "type": "string",
            "description": "Parameter value",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ComputeAccountingModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "description": "Start time",
            "format": "date-time"
          },
          "EndTime": {
            "type": "string",
            "description": "End time",
            "format": "date-time"
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CopyJobDataFromTempModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "CreatedJobInfoId": {
            "type": "integer",
            "description": "Created job info id",
            "format": "int64"
          },
          "TempSessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Temp session code",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CopyJobDataToTempModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "CreatedJobInfoId": {
            "type": "integer",
            "description": "Created job info id",
            "format": "int64"
          },
          "Path": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Path",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAccountingModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Formula": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Formula",
            "nullable": true
          },
          "ValidityFrom": {
            "type": "string",
            "description": "Validity from",
            "format": "date-time"
          },
          "ValidityTo": {
            "type": "string",
            "description": "Validity to",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateClusterModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "MasterNodeName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Master node name",
            "nullable": true
          },
          "SchedulerType": {
            "$ref": "#/components/schemas/SchedulerType"
          },
          "ConnectionProtocol": {
            "$ref": "#/components/schemas/ClusterConnectionProtocol"
          },
          "TimeZone": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Time zone",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "description": "Port",
            "format": "int32",
            "nullable": true
          },
          "UpdateJobStateByServiceAccount": {
            "type": "boolean",
            "description": "Update job state by service account"
          },
          "DomainName": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Domain name",
            "nullable": true
          },
          "ProxyConnectionId": {
            "type": "integer",
            "description": "Proxy connection id",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateClusterNodeTypeAggregationAccountingModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ClusterNodeTypeAggregationId": {
            "type": "integer",
            "description": "Cluster node type aggregation id",
            "format": "int64"
          },
          "AccountingId": {
            "type": "integer",
            "description": "Accounting id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CreateClusterNodeTypeAggregationModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "AllocationType": {
            "type": "string",
            "description": "Allocation type",
            "nullable": true
          },
          "ValidityFrom": {
            "type": "string",
            "description": "Validity from",
            "format": "date-time"
          },
          "ValidityTo": {
            "type": "string",
            "description": "Validity to",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateClusterNodeTypeModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "NumberOfNodes": {
            "type": "integer",
            "description": "Number of nodes",
            "format": "int32",
            "nullable": true
          },
          "CoresPerNode": {
            "type": "integer",
            "description": "Number of cores per node",
            "format": "int32"
          },
          "Queue": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Queue",
            "nullable": true
          },
          "QualityOfService": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Quality of service",
            "nullable": true
          },
          "MaxWalltime": {
            "type": "integer",
            "description": "Maximum walltime",
            "format": "int32",
            "nullable": true
          },
          "ClusterAllocationName": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Cluster allocation name",
            "nullable": true
          },
          "ClusterId": {
            "type": "integer",
            "description": "Cluster id",
            "format": "int64",
            "nullable": true
          },
          "FileTransferMethodId": {
            "type": "integer",
            "description": "File transfer method id",
            "format": "int64",
            "nullable": true
          },
          "ClusterNodeTypeAggregationId": {
            "type": "integer",
            "description": "Cluster node type aggregation id",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateClusterProxyConnectionModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Host": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Host",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "description": "Port",
            "format": "int32"
          },
          "Username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "Password": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Password",
            "nullable": true
          },
          "Type": {
            "$ref": "#/components/schemas/ProxyType"
          }
        },
        "additionalProperties": false
      },
      "CreateCommandInnerTemplateParameterModel": {
        "type": "object",
        "properties": {
          "Identifier": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Identifier",
            "nullable": true
          },
          "Query": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Query",
            "nullable": true
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCommandTemplateFromGenericModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "GenericCommandTemplateId": {
            "type": "integer",
            "description": "Generic command template id",
            "format": "int64"
          },
          "Name": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "ExtendedAllocationCommand": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Extended allocation command",
            "nullable": true
          },
          "ExecutableFile": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Executable file",
            "nullable": true
          },
          "PreparationScript": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Preparation script",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCommandTemplateModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Name": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "ExtendedAllocationCommand": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Extended allocation command",
            "nullable": true
          },
          "ExecutableFile": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Executable file",
            "nullable": true
          },
          "PreparationScript": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Preparation script",
            "nullable": true
          },
          "ClusterNodeTypeId": {
            "type": "integer",
            "description": "Cluster node type id",
            "format": "int64"
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "TemplateParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateCommandInnerTemplateParameterModel"
            },
            "description": "List of create command inner template parameter",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateCommandTemplateParameterModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Identifier": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Identifier",
            "nullable": true
          },
          "Query": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Query",
            "nullable": true
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "CommandTemplateId": {
            "type": "integer",
            "description": "Command template id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CreateFileTransferMethodModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ServerHostname": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Server host name",
            "nullable": true
          },
          "Protocol": {
            "$ref": "#/components/schemas/FileTransferProtocol"
          },
          "ClusterId": {
            "type": "integer",
            "description": "Cluster id",
            "format": "int64"
          },
          "Port": {
            "type": "integer",
            "description": "Port",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateJobByProjectModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "JobSpecification": {
            "$ref": "#/components/schemas/JobSpecificationExt"
          }
        },
        "additionalProperties": false
      },
      "CreateProjectAssignmentToClusterModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "ClusterId": {
            "type": "integer",
            "description": "Cluster id",
            "format": "int64"
          },
          "ScratchStoragePath": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Scratch Storage Path",
            "nullable": true
          },
          "PermanentStoragePath": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Permanent Storage Path",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateProjectClusterNodeTypeAggregationModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "ClusterNodeTypeAggregationId": {
            "type": "integer",
            "description": "Cluster node type aggregation id",
            "format": "int64"
          },
          "AllocationAmount": {
            "type": "integer",
            "description": "Allocation amount",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CreateProjectModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "AccountingString": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Accounting string",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "UsageType": {
            "$ref": "#/components/schemas/UsageTypeExt"
          },
          "UseAccountingStringForScheduler": {
            "type": "boolean",
            "description": "Use accounting string for scheduler"
          },
          "PIEmail": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "PIEmail",
            "nullable": true
          },
          "IsOneToOneMapping": {
            "type": "boolean",
            "description": "Map user account to exact robot account",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateSecureShellKeyModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SshKeyUserCredentialsModel"
            },
            "description": "List of ssh key user credentials",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CreateSecureShellKeyModelObsolete": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "Password": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "CreateSubProjectModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Identifier": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Identifier",
            "nullable": true
          },
          "Description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "DataTransferMethodExt": {
        "type": "object",
        "properties": {
          "SubmittedTaskId": {
            "type": "integer",
            "description": "Submitted task id",
            "format": "int64"
          },
          "Port": {
            "type": "integer",
            "description": "Port",
            "format": "int32",
            "nullable": true
          },
          "NodeIPAddress": {
            "maxLength": 45,
            "minLength": 0,
            "type": "string",
            "description": "Node ip address",
            "nullable": true
          },
          "NodePort": {
            "type": "integer",
            "description": "Node port",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Database_": {
        "type": "object",
        "properties": {
          "IsHealthy": {
            "type": "boolean",
            "description": "Database is healthy"
          }
        },
        "additionalProperties": false
      },
      "DeleteJobModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "SubmittedJobInfoId": {
            "type": "integer",
            "description": "Subbmited job info id",
            "format": "int64"
          },
          "ArchiveLogs": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeploymentTypeExt": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "DigitalSignatureCredentialsExt": {
        "type": "object",
        "properties": {
          "Username": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "Noise": {
            "type": "string",
            "description": "Noise",
            "nullable": true
          },
          "DigitalSignature": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Digital signature",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DownloadFileFromClusterModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "SubmittedJobInfoId": {
            "type": "integer",
            "description": "Subbmited job info id",
            "format": "int64"
          },
          "RelativeFilePath": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Relative file path on cluster",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DownloadPartsOfJobFilesFromClusterModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "SubmittedJobInfoId": {
            "type": "integer",
            "description": "Subbmited job info id",
            "format": "int64"
          },
          "TaskFileOffsets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskFileOffsetExt"
            },
            "description": "Task file models array",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EndDataTransferModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "UsedTransferMethod": {
            "$ref": "#/components/schemas/DataTransferMethodExt"
          }
        },
        "additionalProperties": false
      },
      "EndFileTransferModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "SubmittedJobInfoId": {
            "type": "integer",
            "description": "Subbmited job info id",
            "format": "int64"
          },
          "PublicKey": {
            "type": "string",
            "description": "Public key",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EnvironmentVariableExt": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Value": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Value",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExtendedClusterExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "MasterNodeName": {
            "type": "string",
            "description": "Master node name",
            "nullable": true
          },
          "SchedulerType": {
            "$ref": "#/components/schemas/SchedulerTypeExt"
          },
          "TimeZone": {
            "type": "string",
            "description": "Time zone",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "description": "SSH port",
            "format": "int32",
            "nullable": true
          },
          "ConnectionProtocol": {
            "$ref": "#/components/schemas/ClusterConnectionProtocolExt"
          },
          "UpdateJobStateByServiceAccount": {
            "type": "boolean",
            "description": "Update Job State By ServiceAccount"
          },
          "DomainName": {
            "type": "string",
            "description": "DomainName",
            "nullable": true
          },
          "ProxyConnection": {
            "$ref": "#/components/schemas/ClusterProxyConnectionExt"
          },
          "FileTransferMethodIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "File transfer ids",
            "nullable": true
          },
          "NodeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterNodeTypeExt"
            },
            "description": "Array of node types",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExtendedCommandTemplateExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "ExtendedAllocationCommand": {
            "type": "string",
            "description": "Extended allocation command",
            "nullable": true
          },
          "ExecutableFile": {
            "type": "string",
            "description": "Executable file",
            "nullable": true
          },
          "PreparationScript": {
            "type": "string",
            "description": "Preparation script",
            "nullable": true
          },
          "CommandParameters": {
            "type": "string",
            "description": "Command parameters",
            "nullable": true
          },
          "IsGeneric": {
            "type": "boolean",
            "description": "Is generic"
          },
          "IsEnabled": {
            "type": "boolean",
            "description": "Is enabled"
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "ClusterNodeTypeId": {
            "type": "integer",
            "description": "Cluster node type id",
            "format": "int64"
          },
          "CreatedFromGenericTemplateId": {
            "type": "integer",
            "description": "Created from generic template id",
            "format": "int64",
            "nullable": true
          },
          "TemplateParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedCommandTemplateParameterExt"
            },
            "description": "Array of template parameters",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExtendedCommandTemplateParameterExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Identifier": {
            "type": "string",
            "description": "Identifier",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "Query": {
            "type": "string",
            "description": "Query",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExtendedProjectInfoExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "AccountingString": {
            "type": "string",
            "description": "Accounting string",
            "nullable": true
          },
          "PrimaryInvestigatorContact": {
            "type": "string",
            "description": "Primary investigator contact",
            "nullable": true
          },
          "Contacts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of contacts",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "CommandTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandTemplateExt"
            },
            "description": "Array of command templates",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileInformationExt": {
        "type": "object",
        "properties": {
          "FileName": {
            "type": "string",
            "description": "File name",
            "nullable": true
          },
          "LastModifiedDate": {
            "type": "string",
            "description": "Last modified at date",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileTransferCipherTypeExt": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "FileTransferKeyCredentialsExt": {
        "type": "object",
        "properties": {
          "Username": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "description": "Password",
            "nullable": true
          },
          "CipherType": {
            "$ref": "#/components/schemas/FileTransferCipherTypeExt"
          },
          "CredentialsAuthType": {
            "$ref": "#/components/schemas/ClusterAuthenticationCredentialsAuthTypeExt"
          },
          "PrivateKey": {
            "type": "string",
            "description": "Private key",
            "nullable": true
          },
          "PrivateKeyCertificate": {
            "type": "string",
            "description": "Private key certificate",
            "nullable": true
          },
          "PublicKey": {
            "type": "string",
            "description": "Public key",
            "nullable": true
          },
          "Passphrase": {
            "type": "string",
            "description": "Passphrase",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileTransferMethodExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "ServerHostname": {
            "type": "string",
            "description": "Server host name",
            "nullable": true
          },
          "SharedBasepath": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Shared base path",
            "nullable": true
          },
          "Protocol": {
            "$ref": "#/components/schemas/FileTransferProtocolExt"
          },
          "Port": {
            "type": "integer",
            "description": "Port",
            "format": "int32",
            "nullable": true
          },
          "ProxyConnection": {
            "$ref": "#/components/schemas/ClusterProxyConnectionExt"
          },
          "Credentials": {
            "$ref": "#/components/schemas/FileTransferKeyCredentialsExt"
          }
        },
        "additionalProperties": false
      },
      "FileTransferMethodNoCredentialsExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "ServerHostname": {
            "type": "string",
            "description": "Server host name",
            "nullable": true
          },
          "SharedBasepath": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Shared base path",
            "nullable": true
          },
          "ClusterId": {
            "type": "integer",
            "description": "Cluster id",
            "format": "int64"
          },
          "Protocol": {
            "$ref": "#/components/schemas/FileTransferProtocolExt"
          },
          "Port": {
            "type": "integer",
            "description": "Port",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FileTransferProtocol": {
        "enum": [
          1,
          2,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "FileTransferProtocolExt": {
        "enum": [
          1,
          2,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "GetCommandTemplateParametersNameModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "CommandTemplateId": {
            "type": "integer",
            "description": "Command template id",
            "format": "int64"
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "UserScriptPath": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "description": "User script path",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetDataTransferMethodModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "SubmittedTaskInfoId": {
            "type": "integer",
            "description": "Submitted task info id",
            "format": "int64"
          },
          "IpAddress": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Ip address",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "description": "Port",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "GetFileTransferMethodModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "SubmittedJobInfoId": {
            "type": "integer",
            "description": "Subbmited job info id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "HTTPHeaderExt": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Value": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Value",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HealthComponent_": {
        "type": "object",
        "properties": {
          "Database": {
            "$ref": "#/components/schemas/Database_"
          },
          "Vault": {
            "$ref": "#/components/schemas/Vault_"
          }
        },
        "additionalProperties": false
      },
      "HealthExt": {
        "type": "object",
        "properties": {
          "IsHealthy": {
            "type": "boolean",
            "description": "IsHealthy"
          },
          "Timestamp": {
            "type": "string",
            "description": "Timestamp",
            "format": "date-time"
          },
          "Version": {
            "type": "string",
            "description": "Version",
            "nullable": true
          },
          "Component": {
            "$ref": "#/components/schemas/HealthComponent_"
          }
        },
        "additionalProperties": false
      },
      "HttpGetToJobNodeModel": {
        "required": [
          "NodePort"
        ],
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "SubmittedTaskInfoId": {
            "type": "integer",
            "description": "Submitted task info id",
            "format": "int64"
          },
          "HttpRequest": {
            "type": "string",
            "description": "Http request",
            "nullable": true
          },
          "HttpHeaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HTTPHeaderExt"
            },
            "description": "Http headers",
            "nullable": true
          },
          "NodeIPAddress": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Node ip address",
            "nullable": true
          },
          "NodePort": {
            "type": "integer",
            "description": "Node port",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "HttpPostToJobNodeModel": {
        "required": [
          "NodePort"
        ],
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "SubmittedTaskInfoId": {
            "type": "integer",
            "description": "Submitted task info id",
            "format": "int64"
          },
          "HttpRequest": {
            "type": "string",
            "description": "Http request",
            "nullable": true
          },
          "HttpHeaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HTTPHeaderExt"
            },
            "description": "Http headers",
            "nullable": true
          },
          "HttpPayload": {
            "type": "string",
            "description": "Http payload",
            "nullable": true
          },
          "NodeIPAddress": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Node ip address",
            "nullable": true
          },
          "NodePort": {
            "type": "integer",
            "description": "Node port",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "InitializeClusterScriptDirectoryModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "OverwriteExistingProjectRootDirectory": {
            "type": "boolean",
            "description": "Overwrite existing cluster project root directory"
          },
          "Username": {
            "type": "string",
            "description": "Username",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InstanceInformationExt": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "Version": {
            "type": "string",
            "description": "Version",
            "nullable": true
          },
          "DeployedIPAddress": {
            "type": "string",
            "description": "Deployed IP address",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "description": "Port",
            "format": "int32"
          },
          "URL": {
            "type": "string",
            "description": "URL",
            "nullable": true
          },
          "URLPostfix": {
            "type": "string",
            "description": "URL Postfix",
            "nullable": true
          },
          "DeploymentType": {
            "$ref": "#/components/schemas/DeploymentTypeExt"
          },
          "ResourceAllocationTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceAllocationTypeExt"
            },
            "description": "Deployment allocation types",
            "nullable": true
          },
          "Projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExtendedProjectInfoExt"
            },
            "description": "Instance reference to HPC Projects",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobDetailedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "State": {
            "$ref": "#/components/schemas/JobStateExt"
          },
          "CreationTime": {
            "type": "string",
            "description": "Creation time",
            "format": "date-time"
          },
          "SubmitTime": {
            "type": "string",
            "description": "Submit time",
            "format": "date-time",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "description": "End time",
            "format": "date-time",
            "nullable": true
          },
          "Submitter": {
            "type": "string",
            "description": "Submitter",
            "nullable": true
          },
          "Tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDetailedReportExt"
            },
            "description": "List of task detailed reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobExtendedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "State": {
            "$ref": "#/components/schemas/JobStateExt"
          },
          "Tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskExtendedReportExt"
            },
            "description": "List of task extended reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobFileContentExt": {
        "type": "object",
        "properties": {
          "Content": {
            "type": "string",
            "description": "Content",
            "nullable": true
          },
          "RelativePath": {
            "type": "string",
            "description": "Relative path",
            "nullable": true
          },
          "Offset": {
            "type": "integer",
            "description": "Offset",
            "format": "int64",
            "nullable": true
          },
          "FileType": {
            "$ref": "#/components/schemas/SynchronizableFilesExt"
          },
          "SubmittedTaskInfoId": {
            "type": "integer",
            "description": "Submitted task info id",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "SubProject": {
            "type": "string",
            "description": "Sub project",
            "nullable": true
          },
          "Tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskReportExt"
            },
            "description": "List of task reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobSpecificationExt": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "SubProjectIdentifier": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Sub project identifier",
            "nullable": true
          },
          "WaitingLimit": {
            "type": "integer",
            "description": "Waiting limit",
            "format": "int32",
            "nullable": true
          },
          "WalltimeLimit": {
            "type": "integer",
            "description": "Walltime limit",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "NotificationEmail": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Notification email",
            "nullable": true
          },
          "PhoneNumber": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Phone number",
            "nullable": true
          },
          "NotifyOnAbort": {
            "type": "boolean",
            "description": "Notify on abort",
            "nullable": true
          },
          "NotifyOnFinish": {
            "type": "boolean",
            "description": "Notify on finish",
            "nullable": true
          },
          "NotifyOnStart": {
            "type": "boolean",
            "description": "Notify on start",
            "nullable": true
          },
          "ClusterId": {
            "type": "integer",
            "description": "Cluster id",
            "format": "int64",
            "nullable": true
          },
          "FileTransferMethodId": {
            "type": "integer",
            "description": "File transfer method id",
            "format": "int64",
            "nullable": true
          },
          "IsExtraLong": {
            "type": "boolean",
            "description": "Is extra long"
          },
          "EnvironmentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariableExt"
            },
            "description": "Array of environment variables",
            "nullable": true
          },
          "Tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskSpecificationExt"
            },
            "description": "Array of task specification models",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JobStateAggregationReportExt": {
        "type": "object",
        "properties": {
          "JobStateId": {
            "$ref": "#/components/schemas/JobStateExt"
          },
          "JobStateName": {
            "type": "string",
            "description": "Job state name",
            "nullable": true
          },
          "Count": {
            "type": "integer",
            "description": "Count",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "JobStateExt": {
        "enum": [
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          256
        ],
        "type": "integer",
        "format": "int32"
      },
      "LexisCredentialsExt": {
        "required": [
          "OpenIdAccessToken"
        ],
        "type": "object",
        "properties": {
          "Username": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "OpenIdAccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "OpenId access token"
          }
        },
        "additionalProperties": false
      },
      "ModifyAccountingModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Formula": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Formula",
            "nullable": true
          },
          "ValidityFrom": {
            "type": "string",
            "description": "Validity from",
            "format": "date-time"
          },
          "ValidityTo": {
            "type": "string",
            "description": "Validity to",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModifyClusterAuthenticationCredentialModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project ID",
            "format": "int64"
          },
          "OldUsername": {
            "type": "string",
            "description": "Old username",
            "nullable": true
          },
          "NewUsername": {
            "type": "string",
            "description": "New username",
            "nullable": true
          },
          "NewPassword": {
            "type": "string",
            "description": "New password",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModifyClusterModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "MasterNodeName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Master node name",
            "nullable": true
          },
          "SchedulerType": {
            "$ref": "#/components/schemas/SchedulerType"
          },
          "ConnectionProtocol": {
            "$ref": "#/components/schemas/ClusterConnectionProtocol"
          },
          "TimeZone": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "description": "Time zone",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "description": "Port",
            "format": "int32",
            "nullable": true
          },
          "UpdateJobStateByServiceAccount": {
            "type": "boolean",
            "description": "Update job state by service account"
          },
          "DomainName": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Domain name",
            "nullable": true
          },
          "ProxyConnectionId": {
            "type": "integer",
            "description": "Proxy connection id",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModifyClusterNodeTypeAggregationModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "AllocationType": {
            "type": "string",
            "description": "Allocation type",
            "nullable": true
          },
          "ValidityFrom": {
            "type": "string",
            "description": "Validity from",
            "format": "date-time"
          },
          "ValidityTo": {
            "type": "string",
            "description": "Validity to",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModifyClusterNodeTypeModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "NumberOfNodes": {
            "type": "integer",
            "description": "Number of nodes",
            "format": "int32",
            "nullable": true
          },
          "CoresPerNode": {
            "type": "integer",
            "description": "Number of cores per node",
            "format": "int32"
          },
          "Queue": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Queue",
            "nullable": true
          },
          "QualityOfService": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Quality of service",
            "nullable": true
          },
          "MaxWalltime": {
            "type": "integer",
            "description": "Maximum wall time",
            "format": "int32",
            "nullable": true
          },
          "ClusterAllocationName": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Cluster allocation name",
            "nullable": true
          },
          "ClusterId": {
            "type": "integer",
            "description": "Cluster id",
            "format": "int64",
            "nullable": true
          },
          "FileTransferMethodId": {
            "type": "integer",
            "description": "File transfer method id",
            "format": "int64",
            "nullable": true
          },
          "ClusterNodeTypeAggregationId": {
            "type": "integer",
            "description": "Cluster node type aggregation id",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModifyClusterProxyConnectionModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Host": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Host",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "description": "Port",
            "format": "int32"
          },
          "Username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "Password": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Password",
            "nullable": true
          },
          "Type": {
            "$ref": "#/components/schemas/ProxyType"
          }
        },
        "additionalProperties": false
      },
      "ModifyCommandTemplateFromGenericModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "CommandTemplateId": {
            "type": "integer",
            "description": "Command template id",
            "format": "int64"
          },
          "Name": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "ExtendedAllocationCommand": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Extended allocation command",
            "nullable": true
          },
          "ExecutableFile": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Executable file",
            "nullable": true
          },
          "PreparationScript": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Preparation script",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModifyCommandTemplateModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "maxLength": 80,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "ExtendedAllocationCommand": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Extended allocation command",
            "nullable": true
          },
          "ExecutableFile": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "description": "Executable file",
            "nullable": true
          },
          "PreparationScript": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "description": "Preparation script",
            "nullable": true
          },
          "ClusterNodeTypeId": {
            "type": "integer",
            "description": "Cluster node type id",
            "format": "int64"
          },
          "IsEnabled": {
            "type": "boolean",
            "description": "Is enabled"
          }
        },
        "additionalProperties": false
      },
      "ModifyCommandTemplateParameterModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Identifier": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "description": "Identifier",
            "nullable": true
          },
          "Query": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Query",
            "nullable": true
          },
          "Description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModifyFileTransferMethodModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "ServerHostname": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Server hostname",
            "nullable": true
          },
          "Protocol": {
            "$ref": "#/components/schemas/FileTransferProtocol"
          },
          "ClusterId": {
            "type": "integer",
            "description": "Cluster id",
            "format": "int64"
          },
          "Port": {
            "type": "integer",
            "description": "Port",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModifyProjectAssignmentToClusterModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "ClusterId": {
            "type": "integer",
            "description": "Cluster id",
            "format": "int64"
          },
          "ScratchStoragePath": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Scratch Storage Path",
            "nullable": true
          },
          "PermanentStoragePath": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Permanent Storage Path",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModifyProjectClusterNodeTypeAggregationModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "ClusterNodeTypeAggregationId": {
            "type": "integer",
            "description": "Cluster node type aggregation id",
            "format": "int64"
          },
          "AllocationAmount": {
            "type": "integer",
            "description": "Allocation amount",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ModifyProjectModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "UsageType": {
            "$ref": "#/components/schemas/UsageTypeExt"
          },
          "UseAccountingStringForScheduler": {
            "type": "boolean",
            "description": "Use accounting string for scheduler",
            "nullable": true
          },
          "IsOneToOneMapping": {
            "type": "boolean",
            "description": "Map user account to exact robot account",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ModifySubProjectModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Identifier": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Identifier",
            "nullable": true
          },
          "Description": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "NodeUsedCoresAndLimitationExt": {
        "type": "object",
        "properties": {
          "CoresUsed": {
            "type": "integer",
            "description": "Number of cores used",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "OpenIdCredentialsExt": {
        "required": [
          "OpenIdAccessToken"
        ],
        "type": "object",
        "properties": {
          "Username": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "OpenIdAccessToken": {
            "minLength": 1,
            "type": "string",
            "description": "OpenId access token"
          }
        },
        "additionalProperties": false
      },
      "OpenStackApplicationCredentialsExt": {
        "type": "object",
        "properties": {
          "ApplicationCredentialsId": {
            "type": "string",
            "description": "Application credentials id",
            "nullable": true
          },
          "ApplicationCredentialsSecret": {
            "type": "string",
            "description": "Application credentials secret",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PasswordCredentialsExt": {
        "type": "object",
        "properties": {
          "Username": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "Password": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Password",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProjectAggregatedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "AccountingString": {
            "type": "string",
            "description": "Accounting string",
            "nullable": true
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "UsageType": {
            "$ref": "#/components/schemas/UsageTypeExt"
          },
          "SubProjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubProjectAggregatedReportExt"
            },
            "description": "List of sub project aggregated reports",
            "nullable": true
          },
          "Clusters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterAggregatedReportExt"
            },
            "description": "List of cluster aggregated reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectClusterNodeTypeAggregationExt": {
        "type": "object",
        "properties": {
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "ClusterNodeTypeAggregationId": {
            "type": "integer",
            "description": "Cluster node type aggregation id",
            "format": "int64"
          },
          "AllocationAmount": {
            "type": "integer",
            "description": "Allocation amount",
            "format": "int64"
          },
          "CreatedAt": {
            "type": "string",
            "description": "Created at date",
            "format": "date-time"
          },
          "ModifiedAt": {
            "type": "string",
            "description": "Modified at date",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectDetailedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "AccountingString": {
            "type": "string",
            "description": "Accounting string",
            "nullable": true
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "UsageType": {
            "$ref": "#/components/schemas/UsageTypeExt"
          },
          "StartDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "Clusters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterDetailedReportExt"
            },
            "description": "List of cluster detailed reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "AccountingString": {
            "type": "string",
            "description": "Accounting string",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "UsageType": {
            "$ref": "#/components/schemas/UsageTypeExt"
          },
          "UseAccountingStringForScheduler": {
            "type": "boolean",
            "description": "Use accounting string for scheduler"
          },
          "IsOneToOneMapping": {
            "type": "boolean",
            "description": "Map user account to exact robot account"
          },
          "CommandTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandTemplateExt"
            },
            "description": "Array of command templates",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectExtendedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "AccountingString": {
            "type": "string",
            "description": "Accounting string",
            "nullable": true
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "Clusters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterExtendedReportExt"
            },
            "description": "List of cluster extended reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectForTaskExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "AccountingString": {
            "type": "string",
            "description": "Accounting string",
            "nullable": true
          },
          "CommandTemplate": {
            "$ref": "#/components/schemas/CommandTemplateExt"
          }
        },
        "additionalProperties": false
      },
      "ProjectListReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "AccountingString": {
            "type": "string",
            "description": "Accounting string",
            "nullable": true
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectReferenceExt": {
        "required": [
          "Project"
        ],
        "type": "object",
        "properties": {
          "Project": {
            "$ref": "#/components/schemas/ProjectExt"
          },
          "Role": {
            "$ref": "#/components/schemas/AdaptorUserRoleExt"
          }
        },
        "additionalProperties": false
      },
      "ProjectReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "AccountingString": {
            "type": "string",
            "description": "Accounting string",
            "nullable": true
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "UsageType": {
            "$ref": "#/components/schemas/UsageTypeExt"
          },
          "Clusters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterReportExt"
            },
            "description": "List of cluster reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectResourceUsageExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "AccountingString": {
            "type": "string",
            "description": "Accounting string",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time"
          },
          "NodeTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterNodeTypeResourceUsageExt"
            },
            "description": "Array of node types",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProxyType": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ProxyTypeExt": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "PublicKeyExt": {
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "description": "Username",
            "nullable": true
          },
          "KeyType": {
            "$ref": "#/components/schemas/FileTransferCipherTypeExt"
          },
          "PublicKeyOpenSSH": {
            "type": "string",
            "description": "Public key OpenSSH",
            "nullable": true
          },
          "PublicKeyPEM": {
            "type": "string",
            "description": "Public key PEM",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegenerateSecureShellKeyModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "Password": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Password",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RegenerateSecureShellKeyModelObsolete": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Password": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "format": "int64"
          },
          "PublicKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RemoveAccountingModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveClusterModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveClusterNodeTypeAggregationAccountingModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ClusterNodeTypeAggregationId": {
            "type": "integer",
            "description": "Cluster node type aggregation id",
            "format": "int64"
          },
          "AccountingId": {
            "type": "integer",
            "description": "Accounting id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveClusterNodeTypeAggregationModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveClusterNodeTypeModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveClusterProxyConnectionModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveCommandTemplateModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "CommandTemplateId": {
            "type": "integer",
            "description": "Command template id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveCommandTemplateParameterModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveFileTransferMethodModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveProjectAssignmentToClusterModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "ClusterId": {
            "type": "integer",
            "description": "Cluster id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveProjectClusterNodeTypeAggregationModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          },
          "ClusterNodeTypeAggregationId": {
            "type": "integer",
            "description": "Cluster node type aggregation id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveProjectModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveSecureShellKeyModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RemoveSecureShellKeyModelObsolete": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "format": "int64"
          },
          "PublicKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RemoveSubProjectModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResourceAllocationTypeExt": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "SchedulerType": {
        "enum": [
          1,
          2,
          4,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "SchedulerTypeExt": {
        "enum": [
          1,
          2,
          4,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "SshKeyUserCredentialsModel": {
        "type": "object",
        "properties": {
          "Username": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "User name",
            "nullable": true
          },
          "Password": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Password",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubProjectAggregatedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "Clusters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClusterAggregatedReportExt"
            },
            "description": "List of cluster aggregated reports",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubProjectExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Identifier": {
            "type": "string",
            "description": "Identifier",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Start date",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "End date",
            "format": "date-time",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "description": "Project id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SubmitJobModel": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "CreatedJobInfoId": {
            "type": "integer",
            "description": "Created job info id",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "SubmittedJobInfoExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "State": {
            "$ref": "#/components/schemas/JobStateExt"
          },
          "CreationTime": {
            "type": "string",
            "description": "Creation time",
            "format": "date-time",
            "nullable": true
          },
          "SubmitTime": {
            "type": "string",
            "description": "Submit time",
            "format": "date-time",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "description": "End time",
            "format": "date-time",
            "nullable": true
          },
          "TotalAllocatedTime": {
            "type": "number",
            "description": "Total allocation time",
            "format": "double",
            "nullable": true
          },
          "SubProject": {
            "type": "string",
            "description": "Sub project",
            "nullable": true
          },
          "Tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubmittedTaskInfoExt"
            },
            "description": "Array of tasks",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubmittedTaskInfoExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "State": {
            "$ref": "#/components/schemas/TaskStateExt"
          },
          "Priority": {
            "$ref": "#/components/schemas/TaskPriorityExt"
          },
          "AllocatedTime": {
            "type": "number",
            "description": "Allocated time",
            "format": "double",
            "nullable": true
          },
          "AllocatedCoreIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of allocated core ids",
            "nullable": true
          },
          "StartTime": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "description": "End time",
            "format": "date-time",
            "nullable": true
          },
          "NodeType": {
            "$ref": "#/components/schemas/ClusterNodeTypeForTaskExt"
          },
          "ErrorMessage": {
            "type": "string",
            "description": "Error message",
            "nullable": true
          },
          "CpuHyperThreading": {
            "type": "boolean",
            "description": "Cpu hyper threading",
            "nullable": true
          },
          "Reason": {
            "type": "string",
            "description": "Reason (parsed from scheduler, e.g. SLURM)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SynchronizableFilesExt": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "TaskDetailedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "ScheduledJobId": {
            "type": "string",
            "description": "Scheduled job id",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "State": {
            "$ref": "#/components/schemas/TaskStateExt"
          },
          "StartTime": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "description": "End time",
            "format": "date-time",
            "nullable": true
          },
          "CommandTemplateId": {
            "type": "integer",
            "description": "Command template id",
            "format": "int64"
          },
          "CommandTemplateName": {
            "type": "string",
            "description": "Command template name",
            "nullable": true
          },
          "Usage": {
            "type": "number",
            "description": "Usage",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskExtendedReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "State": {
            "$ref": "#/components/schemas/TaskStateExt"
          },
          "StartTime": {
            "type": "string",
            "description": "Start time",
            "format": "date-time",
            "nullable": true
          },
          "EndTime": {
            "type": "string",
            "description": "End time",
            "format": "date-time",
            "nullable": true
          },
          "CommandTemplateId": {
            "type": "integer",
            "description": "Command template id",
            "format": "int64"
          },
          "Usage": {
            "type": "number",
            "description": "Usage",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskFileOffsetExt": {
        "type": "object",
        "properties": {
          "SubmittedTaskInfoId": {
            "type": "integer",
            "description": "Submitted task info id",
            "format": "int64",
            "nullable": true
          },
          "FileType": {
            "$ref": "#/components/schemas/SynchronizableFilesExt"
          },
          "Offset": {
            "type": "integer",
            "description": "Offset",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskParalizationParameterExt": {
        "type": "object",
        "properties": {
          "MPIProcesses": {
            "type": "integer",
            "description": "MPI processes",
            "format": "int32",
            "nullable": true
          },
          "OpenMPThreads": {
            "type": "integer",
            "description": "Open MP threads",
            "format": "int32",
            "nullable": true
          },
          "MaxCores": {
            "type": "integer",
            "description": "Maximum cores",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "TaskPriorityExt": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "TaskReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Usage": {
            "type": "number",
            "description": "Usage",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskSpecificationExt": {
        "required": [
          "MaxCores"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "MinCores": {
            "type": "integer",
            "description": "Minimum number of cores",
            "format": "int32",
            "nullable": true
          },
          "MaxCores": {
            "type": "integer",
            "description": "Maximum number of cores",
            "format": "int32"
          },
          "WalltimeLimit": {
            "type": "integer",
            "description": "Walltime limit",
            "format": "int32",
            "nullable": true
          },
          "PlacementPolicy": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Placement policy",
            "nullable": true
          },
          "Priority": {
            "$ref": "#/components/schemas/TaskPriorityExt"
          },
          "JobArrays": {
            "type": "string",
            "description": "Job arrays",
            "nullable": true
          },
          "IsExclusive": {
            "type": "boolean",
            "description": "Is exclusive",
            "nullable": true
          },
          "IsRerunnable": {
            "type": "boolean",
            "description": "Is rerunnable",
            "nullable": true
          },
          "StandardInputFile": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Standard input file",
            "nullable": true
          },
          "StandardOutputFile": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Standard output file",
            "nullable": true
          },
          "StandardErrorFile": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Standard error file",
            "nullable": true
          },
          "ProgressFile": {
            "type": "string",
            "description": "Progress file",
            "nullable": true
          },
          "LogFile": {
            "type": "string",
            "description": "Log file",
            "nullable": true
          },
          "ClusterTaskSubdirectory": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Cluster task subdirectory",
            "nullable": true
          },
          "ClusterNodeTypeId": {
            "type": "integer",
            "description": "Cluster node type id",
            "format": "int64",
            "nullable": true
          },
          "CommandTemplateId": {
            "type": "integer",
            "description": "Command template id",
            "format": "int64",
            "nullable": true
          },
          "CpuHyperThreading": {
            "type": "boolean",
            "description": "Cpu hyper threading",
            "nullable": true
          },
          "RequiredNodes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Required nodes",
            "nullable": true
          },
          "TaskParallelizationParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskParalizationParameterExt"
            },
            "description": "Array of task paralelization parameters",
            "nullable": true
          },
          "EnvironmentVariables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentVariableExt"
            },
            "description": "Array of environment variables",
            "nullable": true
          },
          "DependsOn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskSpecificationExt"
            },
            "description": "Depends on",
            "nullable": true
          },
          "TemplateParameterValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CommandTemplateParameterValueExt"
            },
            "description": "Array of command template parameter values",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaskStateExt": {
        "enum": [
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          256
        ],
        "type": "integer",
        "format": "int32"
      },
      "TestClusterAccessForAccountModelObsolete": {
        "type": "object",
        "properties": {
          "SessionCode": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Session code",
            "nullable": true
          },
          "ProjectId": {
            "type": "integer",
            "format": "int64"
          },
          "PublicKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnauthorizedResult": {
        "type": "object",
        "properties": {
          "StatusCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "UsageTypeExt": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserGroupListReportExt": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "TotalUsage": {
            "type": "number",
            "description": "Total usage",
            "format": "double",
            "nullable": true
          },
          "UsageType": {
            "$ref": "#/components/schemas/UsageTypeExt"
          },
          "Project": {
            "$ref": "#/components/schemas/ProjectListReportExt"
          }
        },
        "additionalProperties": false
      },
      "VaultInfo_": {
        "type": "object",
        "properties": {
          "Initialized": {
            "type": "boolean",
            "description": "Vault is initialized"
          },
          "Sealed": {
            "type": "boolean",
            "description": "Vault is sealed"
          },
          "StandBy": {
            "type": "boolean",
            "description": "Vault is in stand by"
          },
          "PerformanceStandby": {
            "type": "boolean",
            "description": "Vault is in performance stand by"
          }
        },
        "additionalProperties": false
      },
      "Vault_": {
        "type": "object",
        "properties": {
          "IsHealthy": {
            "type": "boolean",
            "description": "Vault is healthy"
          },
          "Info": {
            "$ref": "#/components/schemas/VaultInfo_"
          }
        },
        "additionalProperties": false
      },
      "VersionInformationExt": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Name",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description",
            "nullable": true
          },
          "Version": {
            "type": "string",
            "description": "Version",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}