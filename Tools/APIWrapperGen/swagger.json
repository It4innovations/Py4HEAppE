{
  "swagger": "2.0",
  "info": {
    "title": "py4heappe API",
    "description": "Merged API documentation for py4heappe client",
    "termsOfService": "https://heappe.eu",
    "contact": {
      "name": "IT4Innovations",
      "url": "https://twitter.com/it4innovations",
      "email": "support.heappe@it4i.cz"
    },
    "license": {
      "name": "GNU General Public License v3.0",
      "url": "https://www.gnu.org/licenses/gpl-3.0.html"
    },
    "version": "v5.0.0"
  },
  "paths": {
    "/heappe/ClusterInformation/ListAvailableClusters": {
      "get": {
        "tags": [
          "ClusterInformation"
        ],
        "summary": "Get available clusters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ClusterName",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "NodeTypeName",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "ProjectName",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "AccountingString",
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "CommandTemplateName",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/ClusterInformation/RequestCommandTemplateParametersName": {
      "post": {
        "tags": [
          "ClusterInformation"
        ],
        "summary": "Get command template parameters name",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetCommandTemplateParametersNameModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/ClusterInformation/CurrentClusterNodeUsage": {
      "get": {
        "tags": [
          "ClusterInformation"
        ],
        "summary": "Get actual cluster node usage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "Session code",
            "type": "string"
          },
          {
            "in": "query",
            "name": "ClusterNodeId",
            "description": "ClusterNode ID",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "ProjectId",
            "description": "Project ID",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterNodeUsageExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/DataTransfer/RequestDataTransfer": {
      "post": {
        "tags": [
          "DataTransfer"
        ],
        "summary": "Create Data Transfer",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetDataTransferMethodModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DataTransferMethodExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/DataTransfer/CloseDataTransfer": {
      "post": {
        "tags": [
          "DataTransfer"
        ],
        "summary": "CLose Data Transfer",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EndDataTransferModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/DataTransfer/HttpGetToJobNode": {
      "post": {
        "tags": [
          "DataTransfer"
        ],
        "summary": "Send HTTP GET to Job node",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/HttpGetToJobNodeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/DataTransfer/HttpPostToJobNode": {
      "post": {
        "tags": [
          "DataTransfer"
        ],
        "summary": "Send HTTP POST to Job node",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/HttpPostToJobNodeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/FileTransfer/RequestFileTransfer": {
      "post": {
        "tags": [
          "FileTransfer"
        ],
        "summary": "Create file transfer tunnel",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetFileTransferMethodModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileTransferMethodExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/FileTransfer/CloseFileTransfer": {
      "post": {
        "tags": [
          "FileTransfer"
        ],
        "summary": "Close file transfer tunnel",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/EndFileTransferModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/FileTransfer/DownloadPartsOfJobFilesFromCluster": {
      "post": {
        "tags": [
          "FileTransfer"
        ],
        "summary": "Download part of job files from Cluster",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DownloadPartsOfJobFilesFromClusterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobFileContentExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/FileTransfer/ListChangedFilesForJob": {
      "get": {
        "tags": [
          "FileTransfer"
        ],
        "summary": "Get all changes files during job execution",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "Session code",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SubmittedJobInfoId",
            "description": "SubmittedJobInfo ID",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileInformationExt"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/FileTransfer/DownloadFileFromCluster": {
      "post": {
        "tags": [
          "FileTransfer"
        ],
        "summary": "Download specific file from Cluster",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DownloadFileFromClusterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobManagement/CreateJob": {
      "post": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Create job specification",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateJobByProjectModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubmittedJobInfoExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobManagement/SubmitJob": {
      "put": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Submit job",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubmitJobModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubmittedJobInfoExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobManagement/CancelJob": {
      "put": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Cancel job",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CancelJobModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubmittedJobInfoExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobManagement/DeleteJob": {
      "delete": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Delete job",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteJobModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobManagement/ListJobsForCurrentUser": {
      "get": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Get all jobs for user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "Session code",
            "type": "string"
          },
          {
            "in": "query",
            "name": "JobStates",
            "description": "Job states separated by coma; eg.: \"1,2,8,32\", \"Configuring,Submitted,Running,Failed\",\r\n\"1,2,Running,Failed\" etc.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubmittedJobInfoExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobManagement/CurrentInfoForJob": {
      "get": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Get current info for job",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "Session code",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SubmittedJobInfoId",
            "description": "SubmittedJobInfo ID",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubmittedJobInfoExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobManagement/CopyJobDataToTemp": {
      "post": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Copy job data to temp folder",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CopyJobDataToTempModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobManagement/CopyJobDataFromTemp": {
      "post": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Copy job data from temp folder",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CopyJobDataFromTempModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobManagement/AllocatedNodesIPs": {
      "get": {
        "tags": [
          "JobManagement"
        ],
        "summary": "Get Allocated Nodes IPs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "Session code",
            "type": "string"
          },
          {
            "in": "query",
            "name": "SubmittedTaskInfoId",
            "description": "SubmittedTaskInfo ID",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobReporting/ListAdaptorUserGroups": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get user groups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "Session code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserGroupListReportExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobReporting/UserResourceUsageReport": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get resource usage report for user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "UserId",
            "description": "User ID",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "StartTime",
            "description": "StartTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "EndTime",
            "description": "EndTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "SubProjects",
            "description": "SubProjects",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "SessionCode",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectReportExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobReporting/UserGroupResourceUsageReport": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get resource usage for user group",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "GroupId",
            "description": "Group ID",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "StartTime",
            "description": "StartTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "EndTime",
            "description": "EndTime",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "SubProjects",
            "description": "SubProjects",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "SessionCode",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectReportExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobReporting/ResourceUsageReportForJob": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get resource usage for executed job",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "Session code",
            "type": "string"
          },
          {
            "in": "query",
            "name": "JobId",
            "description": "Job ID",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectExtendedReportExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobReporting/JobsStateAgregationReport": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get job state aggregation report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "Session code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobStateAggregationReportExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobReporting/AggregatedUserGroupResourceUsageReport": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get aggregated resource report usage for user groups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "StartTime",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "EndTime",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectAggregatedReportExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/JobReporting/JobsDetailedReport": {
      "get": {
        "tags": [
          "JobReporting"
        ],
        "summary": "Get job detailed report",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SubProjects",
            "description": "SubProjects",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "Session code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectDetailedReportExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/InstanceInformation": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get HEAppE Information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "SessionCode",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InstanceInformationExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/VersionInformation": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get HEAppE Version Information",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "SessionCode",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VersionInformationExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/CommandTemplate": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List Command Template",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "Id",
            "description": "",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtendedCommandTemplateExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create Static Command Template",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateCommandTemplateModel",
            "schema": {
              "$ref": "#/definitions/CreateCommandTemplateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtendedCommandTemplateExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify Static Command Template",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ModifyCommandTemplateModel",
            "schema": {
              "$ref": "#/definitions/ModifyCommandTemplateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtendedCommandTemplateExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/CommandTemplates": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List Command Templates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "ProjectId",
            "description": "",
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtendedCommandTemplateExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/CommandTemplateFromGeneric": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create Command Template from Generic Command Template",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateCommandTemplateFromGenericModel",
            "schema": {
              "$ref": "#/definitions/CreateCommandTemplateFromGenericModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommandTemplateExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify Command Template based on Generic Command Template",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ModifyCommandTemplateFromGenericModel",
            "schema": {
              "$ref": "#/definitions/ModifyCommandTemplateFromGenericModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommandTemplateExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/RemoveCommandTemplate": {
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove Command Template",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "RemoveCommandTemplateModel",
            "schema": {
              "$ref": "#/definitions/RemoveCommandTemplateModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/CommandTemplateParameter": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get CommandTemplateParameter by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Id",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtendedCommandTemplateParameterExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create Static Command Template",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "CreateCommandTemplateModel",
            "schema": {
              "$ref": "#/definitions/CreateCommandTemplateParameterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtendedCommandTemplateParameterExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify Static Command Template",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "ModifyCommandTemplateParameterModel",
            "schema": {
              "$ref": "#/definitions/ModifyCommandTemplateParameterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtendedCommandTemplateParameterExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove Static Command Template",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "RemoveCommandTemplateParameterModel",
            "schema": {
              "$ref": "#/definitions/RemoveCommandTemplateParameterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/ProjectsByAccountingStrings": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get project by accounting string",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "AccountingString",
            "description": "",
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/Project": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get Project by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Id",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create project",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProjectModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify project",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyProjectModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove project",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveProjectModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/ProjectAssignmentToCluster": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ProjectAssignmentToCluster by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ProjectId",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "ClusterId",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterProjectExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Assign project to the cluster",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProjectAssignmentToClusterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterProjectExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify project assignment to the cluster",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyProjectAssignmentToClusterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterProjectExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove project assignment to the cluster",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveProjectAssignmentToClusterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/Cluster": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get Cluster by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Id",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtendedClusterExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create Cluster",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateClusterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtendedClusterExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Update Cluster",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyClusterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExtendedClusterExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove Cluster",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveClusterModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/Clusters": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get all clusters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExtendedClusterExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterNodeType": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ClusterNodeType by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Id",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterNodeTypeExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create ClusterNodeType",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateClusterNodeTypeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterNodeTypeExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify ClusterNodeType",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyClusterNodeTypeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterNodeTypeExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove ClusterNodeType",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveClusterNodeTypeModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterProxyConnection": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ClusterProxyConnection by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Id",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterProxyConnectionExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create ClusterProxyConnection",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateClusterProxyConnectionModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterProxyConnectionExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify ClusterProxyConnection",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyClusterProxyConnectionModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterProxyConnectionExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove ClusterProxyConnection",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveClusterProxyConnectionModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/FileTransferMethod": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get FileTransferMethod by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Id",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileTransferMethodNoCredentialsExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create FileTransferMethod",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateFileTransferMethodModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileTransferMethodNoCredentialsExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify FileTransferMethod",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyFileTransferMethodModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/FileTransferMethodNoCredentialsExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove FileTransferMethod",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveFileTransferMethodModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterNodeTypeAggregation": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ClusterNodeTypeAggregation by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Id",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterNodeTypeAggregationExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create ClusterNodeTypeAggregations",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateClusterNodeTypeAggregationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterNodeTypeAggregationExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify ClusterNodeTypeAggregations",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyClusterNodeTypeAggregationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterNodeTypeAggregationExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove ClusterNodeTypeAggregation",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveClusterNodeTypeAggregationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterNodeTypeAggregations": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get all ClusterNodeTypeAggregations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterNodeTypeAggregationExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/ClusterNodeTypeAggregationAccounting": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ClusterNodeTypeAggregationAccounting by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ClusterNodeTypeAggregationId",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "AccountingId",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterNodeTypeAggregationAccountingExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create ClusterNodeTypeAggregationAccounting",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateClusterNodeTypeAggregationAccountingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterNodeTypeAggregationAccountingExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove ClusterNodeTypeAggregationAccounting",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveClusterNodeTypeAggregationAccountingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/Accounting": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get Accounting by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Id",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountingExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create Accounting",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateAccountingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountingExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify Accounting",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyAccountingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountingExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove Accounting",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveAccountingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/ProjectClusterNodeTypeAggregation": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ProjectClusterNodeTypeAggregation by id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ProjectId",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "ClusterNodeTypeAggregationId",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectClusterNodeTypeAggregationExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create ProjectClusterNodeTypeAggregation",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProjectClusterNodeTypeAggregationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectClusterNodeTypeAggregationExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify ProjectClusterNodeTypeAggregation",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifyProjectClusterNodeTypeAggregationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProjectClusterNodeTypeAggregationExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove ProjectClusterNodeTypeAggregation",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveProjectClusterNodeTypeAggregationModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/ProjectClusterNodeTypeAggregations": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get ProjectClusterNodeTypeAggregations by ProjectId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ProjectId",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectClusterNodeTypeAggregationExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/SubProjects": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List SubProjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ProjectId",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SubProjectExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/SubProject": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "List SubProject",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SubProjectId",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubProjectExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Create SubProject",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateSubProjectModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubProjectExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Modify SubProject",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ModifySubProjectModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubProjectExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove SubProject",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveSubProjectModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/SecureShellKey": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Generate SSH key",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateSecureShellKeyModelObsolete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublicKeyExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Regenerate SSH key",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RegenerateSecureShellKeyModelObsolete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublicKeyExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true
      },
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove SSH key",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveSecureShellKeyModelObsolete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true
      }
    },
    "/heappe/Management/SecureShellKeys": {
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Get SSH keys for project",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ProjectId",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublicKeyExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/GenerateSecureShellKey": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Generate SSH key",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateSecureShellKeyModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublicKeyExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/RegenerateSecureShellKey": {
      "put": {
        "tags": [
          "Management"
        ],
        "summary": "Regenerate SSH key",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RegenerateSecureShellKeyModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PublicKeyExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/RemoveSecureShellKey": {
      "delete": {
        "tags": [
          "Management"
        ],
        "summary": "Remove SSH key",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/RemoveSecureShellKeyModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/InitializeClusterScriptDirectory": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Initialize cluster script directory for SSH HPC Account",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/InitializeClusterScriptDirectoryModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterInitReportExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/TestClusterAccessForAccount": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Test cluster access for robot account",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestClusterAccessForAccountModelObsolete"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        },
        "deprecated": true
      },
      "get": {
        "tags": [
          "Management"
        ],
        "summary": "Test cluster access for robot account",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "Username",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "ProjectId",
            "description": "",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/ComputeAccounting": {
      "post": {
        "tags": [
          "Management"
        ],
        "summary": "Compute accounting - calculate accounting via accounting formulas",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/ComputeAccountingModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/Management/AccountingState": {
      "post": {
        "tags": [
          "Management"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "ProjectId",
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "SessionCode",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccountingStateExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/AuthenticateLexisToken": {
      "post": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Provide user authentication via OpenId token.",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Authentication credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticateLexisTokenModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/AuthenticateUserOpenId": {
      "post": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Provide user authentication via OpenId token.",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Authentication credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticateUserOpenIdModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/UnauthorizedResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/AuthenticateUserOpenStack": {
      "post": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Provide user authentication to OpenStack.",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Authentication credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticateUserOpenIdOpenStackModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpenStackApplicationCredentialsExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/AuthenticateUserPassword": {
      "post": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Provide user authentication",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Authentication credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticateUserPasswordModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/AuthenticateUserDigitalSignature": {
      "post": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Provide user authentication",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Authentication credentials",
            "schema": {
              "$ref": "#/definitions/AuthenticateUserDigitalSignatureModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/CurrentUsageAndLimitationsForCurrentUser": {
      "get": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Get current resource usage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "Session code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectResourceUsageExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/ProjectsForCurrentUser": {
      "get": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Get projects for current user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectReferenceExt"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    },
    "/heappe/UserAndLimitationManagement/CurrentUserInfo": {
      "get": {
        "tags": [
          "UserAndLimitationManagement"
        ],
        "summary": "Get current user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "SessionCode",
            "description": "Session code",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AdaptorUserExt"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResult"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "413": {
            "description": "Content Too Large",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "429": {
            "description": "Too Many Requests",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ProblemDetails"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountingExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Formula": {
          "description": "Formula",
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "description": "Created at date",
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "description": "Modified at date",
          "type": "string"
        },
        "ValidityFrom": {
          "format": "date-time",
          "description": "Validity from date",
          "type": "string"
        },
        "ValidityTo": {
          "format": "date-time",
          "description": "Validity to date",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AccountingStateExt": {
      "type": "object",
      "properties": {
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "State": {
          "$ref": "#/definitions/AccountingStateTypeExt"
        },
        "ComputingStartDate": {
          "format": "date-time",
          "description": "Comuputing start date",
          "type": "string"
        },
        "ComputingEndDate": {
          "format": "date-time",
          "description": "Comuputing end date",
          "type": "string"
        },
        "TriggeredAt": {
          "format": "date-time",
          "description": "Triggered at",
          "type": "string"
        },
        "LastUpdatedAt": {
          "format": "date-time",
          "description": "Last updated at",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AccountingStateTypeExt": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        4,
        8
      ],
      "type": "integer"
    },
    "AdaptorUserExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Username": {
          "description": "Username",
          "type": "string"
        },
        "PublicKey": {
          "description": "Public key",
          "type": "string"
        },
        "Email": {
          "description": "Email",
          "type": "string"
        },
        "UserType": {
          "$ref": "#/definitions/AdaptorUserTypeExt"
        },
        "AdaptorUserGroups": {
          "description": "Array of adaptor user groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdaptorUserGroupExt"
          }
        }
      },
      "additionalProperties": false
    },
    "AdaptorUserGroupExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "Project": {
          "$ref": "#/definitions/ProjectExt"
        },
        "Roles": {
          "description": "Array of roles",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "AdaptorUserRoleExt": {
      "required": [
        "Description",
        "Name"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "AdaptorUserTypeExt": {
      "format": "int32",
      "enum": [
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "AuthenticateLexisTokenModel": {
      "type": "object",
      "properties": {
        "Credentials": {
          "$ref": "#/definitions/LexisCredentialsExt"
        }
      },
      "additionalProperties": false
    },
    "AuthenticateUserDigitalSignatureModel": {
      "type": "object",
      "properties": {
        "Credentials": {
          "$ref": "#/definitions/DigitalSignatureCredentialsExt"
        }
      },
      "additionalProperties": false
    },
    "AuthenticateUserOpenIdModel": {
      "type": "object",
      "properties": {
        "Credentials": {
          "$ref": "#/definitions/OpenIdCredentialsExt"
        }
      },
      "additionalProperties": false
    },
    "AuthenticateUserOpenIdOpenStackModel": {
      "type": "object",
      "properties": {
        "Credentials": {
          "$ref": "#/definitions/OpenIdCredentialsExt"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "AuthenticateUserPasswordModel": {
      "type": "object",
      "properties": {
        "Credentials": {
          "$ref": "#/definitions/PasswordCredentialsExt"
        }
      },
      "additionalProperties": false
    },
    "BadRequestResult": {
      "type": "object",
      "properties": {
        "StatusCode": {
          "format": "int32",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "CancelJobModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SubmittedJobInfoId": {
          "format": "int64",
          "description": "Subbmited job info id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ClusterAggregatedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "ClusterNodeTypesAggregations": {
          "description": "List of cluster node type aggregated reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterNodeTypeAggregatedReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ClusterAuthenticationCredentialsAuthTypeExt": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "type": "integer"
    },
    "ClusterConnectionProtocol": {
      "format": "int32",
      "enum": [
        1,
        2,
        4
      ],
      "type": "integer"
    },
    "ClusterConnectionProtocolExt": {
      "format": "int32",
      "enum": [
        1,
        2,
        4
      ],
      "type": "integer"
    },
    "ClusterDetailedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "ClusterNodeTypes": {
          "description": "List of cluster node type detailed reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterNodeTypeDetailedReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ClusterExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "NodeTypes": {
          "description": "Array of node types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterNodeTypeExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ClusterExtendedReportExt": {
      "required": [
        "Description"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "minLength": 1,
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "ClusterNodeTypes": {
          "description": "List of cluster node extended type reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterNodeExtendedTypeReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ClusterInitReportExt": {
      "type": "object",
      "properties": {
        "ClusterName": {
          "description": "Cluster name",
          "type": "string"
        },
        "IsClusterInitialized": {
          "description": "Is cluster initialized",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ClusterNodeExtendedTypeReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "Jobs": {
          "description": "List of job extended reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobExtendedReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ClusterNodeTypeAggregatedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Id",
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "ClusterNodeTypes": {
          "description": "List of cluster node type reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterNodeTypeReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ClusterNodeTypeAggregationAccountingExt": {
      "type": "object",
      "properties": {
        "ClusterNodeTypeAggregationId": {
          "format": "int64",
          "description": "Cluster node type aggregation id",
          "type": "integer"
        },
        "AccountingId": {
          "format": "int64",
          "description": "Accounting id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ClusterNodeTypeAggregationExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "AllocationType": {
          "description": "Allocation type",
          "type": "string"
        },
        "ValidityFrom": {
          "format": "date-time",
          "description": "Valid from",
          "type": "string"
        },
        "ValidityTo": {
          "format": "date-time",
          "description": "Valid to",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ClusterNodeTypeDetailedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "QueueName": {
          "description": "Queue name",
          "type": "string"
        },
        "Jobs": {
          "description": "List of job detailed reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobDetailedReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ClusterNodeTypeExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "NumberOfNodes": {
          "format": "int32",
          "description": "Number of nodes",
          "type": "integer"
        },
        "CoresPerNode": {
          "format": "int32",
          "description": "Number of cores per node",
          "type": "integer"
        },
        "MaxWalltime": {
          "format": "int32",
          "description": "Maximum of walltime",
          "type": "integer"
        },
        "FileTransferMethodId": {
          "format": "int64",
          "description": "File transfer id",
          "type": "integer"
        },
        "Queue": {
          "description": "Queue",
          "type": "string"
        },
        "QualityOfService": {
          "description": "Quality of service",
          "type": "string"
        },
        "ClusterAllocationName": {
          "description": "Cluster allocation name",
          "type": "string"
        },
        "ClusterNodeTypeAggregation": {
          "$ref": "#/definitions/ClusterNodeTypeAggregationExt"
        },
        "Accounting": {
          "description": "Accounting",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountingExt"
          }
        },
        "Projects": {
          "description": "Array of projects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ClusterNodeTypeForTaskExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "Project": {
          "$ref": "#/definitions/ProjectForTaskExt"
        }
      },
      "additionalProperties": false
    },
    "ClusterNodeTypeReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "Jobs": {
          "description": "List of job reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ClusterNodeTypeResourceUsageExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "NumberOfNodes": {
          "format": "int32",
          "description": "Number of nodes",
          "type": "integer"
        },
        "CoresPerNode": {
          "format": "int32",
          "description": "Number of cores per node",
          "type": "integer"
        },
        "MaxWalltime": {
          "format": "int32",
          "description": "Maximum walltime",
          "type": "integer"
        },
        "FileTransferMethodId": {
          "format": "int64",
          "description": "File transfer method id",
          "type": "integer"
        },
        "NodeUsedCoresAndLimitation": {
          "$ref": "#/definitions/NodeUsedCoresAndLimitationExt"
        }
      },
      "additionalProperties": false
    },
    "ClusterNodeUsageExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "Priority": {
          "format": "int32",
          "description": "Priority",
          "type": "integer"
        },
        "CoresPerNode": {
          "format": "int32",
          "description": "Number of cores per node",
          "type": "integer"
        },
        "MaxWalltime": {
          "format": "int32",
          "description": "Maximum walltime",
          "type": "integer"
        },
        "NumberOfNodes": {
          "format": "int32",
          "description": "Number of nodes",
          "type": "integer"
        },
        "NumberOfUsedNodes": {
          "format": "int32",
          "description": "Number of used nodes",
          "type": "integer"
        },
        "TotalJobs": {
          "format": "int32",
          "description": "Total jobs number",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ClusterProjectExt": {
      "type": "object",
      "properties": {
        "ClusterId": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "LocalBasepath": {
          "description": "Local base path",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "description": "Created at",
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "description": "Modified at",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ClusterProxyConnectionExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Host": {
          "description": "Host",
          "type": "string"
        },
        "Port": {
          "format": "int32",
          "description": "Port number",
          "type": "integer"
        },
        "Type": {
          "$ref": "#/definitions/ProxyTypeExt"
        },
        "Username": {
          "description": "Username",
          "type": "string"
        },
        "Password": {
          "description": "Password",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ClusterReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "ClusterNodeTypes": {
          "description": "List of cluster node type reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterNodeTypeReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "CommandTemplateExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "ExtendedAllocationCommand": {
          "description": "Extended allocation command",
          "type": "string"
        },
        "IsGeneric": {
          "description": "Is generic",
          "type": "boolean"
        },
        "IsEnabled": {
          "description": "Is enabled",
          "type": "boolean"
        },
        "CreatedFromGenericTemplateId": {
          "format": "int64",
          "description": "Created from generic template id",
          "type": "integer"
        },
        "TemplateParameters": {
          "description": "Array of command template parameters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandTemplateParameterExt"
          }
        }
      },
      "additionalProperties": false
    },
    "CommandTemplateParameterExt": {
      "type": "object",
      "properties": {
        "Identifier": {
          "description": "Identifier",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CommandTemplateParameterValueExt": {
      "type": "object",
      "properties": {
        "CommandParameterIdentifier": {
          "description": "Command parameter identifier",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "ParameterValue": {
          "description": "Parameter value",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ComputeAccountingModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "StartTime": {
          "format": "date-time",
          "description": "Start time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "description": "End time",
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "CopyJobDataFromTempModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CreatedJobInfoId": {
          "format": "int64",
          "description": "Created job info id",
          "type": "integer"
        },
        "TempSessionCode": {
          "description": "Temp session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CopyJobDataToTempModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SubmittedJobInfoId": {
          "format": "int64",
          "description": "Subbmited job info id",
          "type": "integer"
        },
        "Path": {
          "description": "Path",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CreateAccountingModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Formula": {
          "description": "Formula",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "ValidityFrom": {
          "format": "date-time",
          "description": "Validity from",
          "type": "string"
        },
        "ValidityTo": {
          "format": "date-time",
          "description": "Validity to",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CreateClusterModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "MasterNodeName": {
          "description": "Master node name",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "SchedulerType": {
          "$ref": "#/definitions/SchedulerType"
        },
        "ConnectionProtocol": {
          "$ref": "#/definitions/ClusterConnectionProtocol"
        },
        "TimeZone": {
          "description": "Time zone",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "Port": {
          "format": "int32",
          "description": "Port",
          "type": "integer"
        },
        "UpdateJobStateByServiceAccount": {
          "description": "Update job state by service account",
          "type": "boolean"
        },
        "DomainName": {
          "description": "Domain name",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "ProxyConnectionId": {
          "format": "int64",
          "description": "Proxy connection id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "CreateClusterNodeTypeAggregationAccountingModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ClusterNodeTypeAggregationId": {
          "format": "int64",
          "description": "Cluster node type aggregation id",
          "type": "integer"
        },
        "AccountingId": {
          "format": "int64",
          "description": "Accounting id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "CreateClusterNodeTypeAggregationModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "AllocationType": {
          "description": "Allocation type",
          "type": "string"
        },
        "ValidityFrom": {
          "format": "date-time",
          "description": "Validity from",
          "type": "string"
        },
        "ValidityTo": {
          "format": "date-time",
          "description": "Validity to",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CreateClusterNodeTypeModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "NumberOfNodes": {
          "format": "int32",
          "description": "Number of nodes",
          "type": "integer"
        },
        "CoresPerNode": {
          "format": "int32",
          "description": "Number of cores per node",
          "type": "integer"
        },
        "Queue": {
          "description": "Queue",
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "QualityOfService": {
          "description": "Quality of service",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "MaxWalltime": {
          "format": "int32",
          "description": "Maximum walltime",
          "type": "integer"
        },
        "ClusterAllocationName": {
          "description": "Cluster allocation name",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "ClusterId": {
          "format": "int64",
          "description": "Cluster id",
          "type": "integer"
        },
        "FileTransferMethodId": {
          "format": "int64",
          "description": "File transfer method id",
          "type": "integer"
        },
        "ClusterNodeTypeAggregationId": {
          "format": "int64",
          "description": "Cluster node type aggregation id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "CreateClusterProxyConnectionModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Host": {
          "description": "Host",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "Port": {
          "format": "int32",
          "description": "Port",
          "type": "integer"
        },
        "Username": {
          "description": "User name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "description": "Password",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Type": {
          "$ref": "#/definitions/ProxyType"
        }
      },
      "additionalProperties": false
    },
    "CreateCommandInnerTemplateParameterModel": {
      "type": "object",
      "properties": {
        "Identifier": {
          "description": "Identifier",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "Query": {
          "description": "Query",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CreateCommandTemplateFromGenericModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "GenericCommandTemplateId": {
          "format": "int64",
          "description": "Generic command template id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "maxLength": 80,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "Description": {
          "description": "Description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "ExtendedAllocationCommand": {
          "description": "Extended allocation command",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ExecutableFile": {
          "description": "Executable file",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "PreparationScript": {
          "description": "Preparation script",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CreateCommandTemplateModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Name",
          "maxLength": 80,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "ExtendedAllocationCommand": {
          "description": "Extended allocation command",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ExecutableFile": {
          "description": "Executable file",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "PreparationScript": {
          "description": "Preparation script",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "ClusterNodeTypeId": {
          "format": "int64",
          "description": "Cluster node type id",
          "type": "integer"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "TemplateParameters": {
          "description": "List of create command inner template parameter",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreateCommandInnerTemplateParameterModel"
          }
        }
      },
      "additionalProperties": false
    },
    "CreateCommandTemplateParameterModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Identifier": {
          "description": "Identifier",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "Query": {
          "description": "Query",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "CommandTemplateId": {
          "format": "int64",
          "description": "Command template id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "CreateFileTransferMethodModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ServerHostname": {
          "description": "Server host name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Protocol": {
          "$ref": "#/definitions/FileTransferProtocol"
        },
        "ClusterId": {
          "format": "int64",
          "description": "Cluster id",
          "type": "integer"
        },
        "Port": {
          "format": "int32",
          "description": "Port",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "CreateJobByProjectModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "JobSpecification": {
          "$ref": "#/definitions/JobSpecificationExt"
        }
      },
      "additionalProperties": false
    },
    "CreateProjectAssignmentToClusterModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "ClusterId": {
          "format": "int64",
          "description": "Cluster id",
          "type": "integer"
        },
        "LocalBasepath": {
          "description": "Local base path",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CreateProjectClusterNodeTypeAggregationModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "ClusterNodeTypeAggregationId": {
          "format": "int64",
          "description": "Cluster node type aggregation id",
          "type": "integer"
        },
        "AllocationAmount": {
          "format": "int64",
          "description": "Allocation amount",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "CreateProjectModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "AccountingString": {
          "description": "Accounting string",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Start date",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End date",
          "type": "string"
        },
        "UsageType": {
          "$ref": "#/definitions/UsageTypeExt"
        },
        "UseAccountingStringForScheduler": {
          "description": "Use accounting string for scheduler",
          "type": "boolean"
        },
        "PIEmail": {
          "description": "PIEmail",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CreateSecureShellKeyModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Credentials": {
          "description": "List of ssh key user credentials",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SshKeyUserCredentialsModel"
          }
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "CreateSecureShellKeyModelObsolete": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Username": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "CreateSubProjectModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Identifier": {
          "description": "Identifier",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Start date",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End date",
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "DataTransferMethodExt": {
      "type": "object",
      "properties": {
        "SubmittedTaskId": {
          "format": "int64",
          "description": "Submitted task id",
          "type": "integer"
        },
        "Port": {
          "format": "int32",
          "description": "Port",
          "type": "integer"
        },
        "NodeIPAddress": {
          "description": "Node ip address",
          "maxLength": 45,
          "minLength": 0,
          "type": "string"
        },
        "NodePort": {
          "format": "int32",
          "description": "Node port",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "DeleteJobModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SubmittedJobInfoId": {
          "format": "int64",
          "description": "Subbmited job info id",
          "type": "integer"
        },
        "ArchiveLogs": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "DeploymentTypeExt": {
      "format": "int32",
      "enum": [
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "DigitalSignatureCredentialsExt": {
      "type": "object",
      "properties": {
        "Username": {
          "description": "User name",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Noise": {
          "description": "Noise",
          "type": "string"
        },
        "DigitalSignature": {
          "description": "Digital signature",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "additionalProperties": false
    },
    "DownloadFileFromClusterModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SubmittedJobInfoId": {
          "format": "int64",
          "description": "Subbmited job info id",
          "type": "integer"
        },
        "RelativeFilePath": {
          "description": "Relative file path on cluster",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "DownloadPartsOfJobFilesFromClusterModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SubmittedJobInfoId": {
          "format": "int64",
          "description": "Subbmited job info id",
          "type": "integer"
        },
        "TaskFileOffsets": {
          "description": "Task file models array",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskFileOffsetExt"
          }
        }
      },
      "additionalProperties": false
    },
    "EndDataTransferModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "UsedTransferMethod": {
          "$ref": "#/definitions/DataTransferMethodExt"
        }
      },
      "additionalProperties": false
    },
    "EndFileTransferModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SubmittedJobInfoId": {
          "format": "int64",
          "description": "Subbmited job info id",
          "type": "integer"
        },
        "PublicKey": {
          "description": "Public key",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "EnvironmentVariableExt": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Value": {
          "description": "Value",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ExtendedClusterExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "MasterNodeName": {
          "description": "Master node name",
          "type": "string"
        },
        "SchedulerType": {
          "$ref": "#/definitions/SchedulerTypeExt"
        },
        "TimeZone": {
          "description": "Time zone",
          "type": "string"
        },
        "Port": {
          "format": "int32",
          "description": "SSH port",
          "type": "integer"
        },
        "ConnectionProtocol": {
          "$ref": "#/definitions/ClusterConnectionProtocolExt"
        },
        "UpdateJobStateByServiceAccount": {
          "description": "Update Job State By ServiceAccount",
          "type": "boolean"
        },
        "DomainName": {
          "description": "DomainName",
          "type": "string"
        },
        "ProxyConnection": {
          "$ref": "#/definitions/ClusterProxyConnectionExt"
        },
        "NodeTypes": {
          "description": "Array of node types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterNodeTypeExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ExtendedCommandTemplateExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "ExtendedAllocationCommand": {
          "description": "Extended allocation command",
          "type": "string"
        },
        "ExecutableFile": {
          "description": "Executable file",
          "type": "string"
        },
        "PreparationScript": {
          "description": "Preparation script",
          "type": "string"
        },
        "CommandParameters": {
          "description": "Command parameters",
          "type": "string"
        },
        "IsGeneric": {
          "description": "Is generic",
          "type": "boolean"
        },
        "IsEnabled": {
          "description": "Is enabled",
          "type": "boolean"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "ClusterNodeTypeId": {
          "format": "int64",
          "description": "Cluster node type id",
          "type": "integer"
        },
        "CreatedFromGenericTemplateId": {
          "format": "int64",
          "description": "Created from generic template id",
          "type": "integer"
        },
        "TemplateParameters": {
          "description": "Array of template parameters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedCommandTemplateParameterExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ExtendedCommandTemplateParameterExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Identifier": {
          "description": "Identifier",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "Query": {
          "description": "Query",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ExtendedProjectInfoExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "AccountingString": {
          "description": "Accounting string",
          "type": "string"
        },
        "PrimaryInvestigatorContact": {
          "description": "Primary investigator contact",
          "type": "string"
        },
        "Contacts": {
          "description": "Array of contacts",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StartDate": {
          "format": "date-time",
          "description": "Start date",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End date",
          "type": "string"
        },
        "CommandTemplates": {
          "description": "Array of command templates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandTemplateExt"
          }
        }
      },
      "additionalProperties": false
    },
    "FileInformationExt": {
      "type": "object",
      "properties": {
        "FileName": {
          "description": "File name",
          "type": "string"
        },
        "LastModifiedDate": {
          "format": "date-time",
          "description": "Last modified at date",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FileTransferCipherTypeExt": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "type": "integer"
    },
    "FileTransferKeyCredentialsExt": {
      "type": "object",
      "properties": {
        "Username": {
          "description": "User name",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "description": "Password",
          "type": "string"
        },
        "CipherType": {
          "$ref": "#/definitions/FileTransferCipherTypeExt"
        },
        "CredentialsAuthType": {
          "$ref": "#/definitions/ClusterAuthenticationCredentialsAuthTypeExt"
        },
        "PrivateKey": {
          "description": "Private key",
          "type": "string"
        },
        "PrivateKeyCertificate": {
          "description": "Private key certificate",
          "type": "string"
        },
        "PublicKey": {
          "description": "Public key",
          "type": "string"
        },
        "Passphrase": {
          "description": "Passphrase",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "FileTransferMethodExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "ServerHostname": {
          "description": "Server host name",
          "type": "string"
        },
        "SharedBasepath": {
          "description": "Shared base path",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "Protocol": {
          "$ref": "#/definitions/FileTransferProtocolExt"
        },
        "Port": {
          "format": "int32",
          "description": "Port",
          "type": "integer"
        },
        "ProxyConnection": {
          "$ref": "#/definitions/ClusterProxyConnectionExt"
        },
        "Credentials": {
          "$ref": "#/definitions/FileTransferKeyCredentialsExt"
        }
      },
      "additionalProperties": false
    },
    "FileTransferMethodNoCredentialsExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "ServerHostname": {
          "description": "Server host name",
          "type": "string"
        },
        "SharedBasepath": {
          "description": "Shared base path",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "Protocol": {
          "$ref": "#/definitions/FileTransferProtocolExt"
        },
        "Port": {
          "format": "int32",
          "description": "Port",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "FileTransferProtocol": {
      "format": "int32",
      "enum": [
        1,
        2,
        4
      ],
      "type": "integer"
    },
    "FileTransferProtocolExt": {
      "format": "int32",
      "enum": [
        1,
        2,
        4
      ],
      "type": "integer"
    },
    "GetCommandTemplateParametersNameModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CommandTemplateId": {
          "format": "int64",
          "description": "Command template id",
          "type": "integer"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "UserScriptPath": {
          "description": "User script path",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "GetDataTransferMethodModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SubmittedJobInfoId": {
          "format": "int64",
          "description": "Subbmited job info id",
          "type": "integer"
        },
        "IpAddress": {
          "description": "Ip address",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Port": {
          "format": "int32",
          "description": "Port",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "GetFileTransferMethodModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SubmittedJobInfoId": {
          "format": "int64",
          "description": "Subbmited job info id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "HTTPHeaderExt": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Value": {
          "description": "Value",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "HttpGetToJobNodeModel": {
      "required": [
        "NodePort"
      ],
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SubmittedJobInfoId": {
          "format": "int64",
          "description": "Subbmited job info id",
          "type": "integer"
        },
        "HttpRequest": {
          "description": "Http request",
          "type": "string"
        },
        "HttpHeaders": {
          "description": "Http headers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HTTPHeaderExt"
          }
        },
        "NodeIPAddress": {
          "description": "Node ip address",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "NodePort": {
          "format": "int32",
          "description": "Node port",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "HttpPostToJobNodeModel": {
      "required": [
        "NodePort"
      ],
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "SubmittedJobInfoId": {
          "format": "int64",
          "description": "Subbmited job info id",
          "type": "integer"
        },
        "HttpRequest": {
          "description": "Http request",
          "type": "string"
        },
        "HttpHeaders": {
          "description": "Http headers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/HTTPHeaderExt"
          }
        },
        "HttpPayload": {
          "description": "Http payload",
          "type": "string"
        },
        "NodeIPAddress": {
          "description": "Node ip address",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "NodePort": {
          "format": "int32",
          "description": "Node port",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "InitializeClusterScriptDirectoryModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "ClusterProjectRootDirectory": {
          "description": "Cluster project root directory",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "InstanceInformationExt": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "Version": {
          "description": "Version",
          "type": "string"
        },
        "DeployedIPAddress": {
          "description": "Deployed IP address",
          "type": "string"
        },
        "Port": {
          "format": "int32",
          "description": "Port",
          "type": "integer"
        },
        "URL": {
          "description": "URL",
          "type": "string"
        },
        "URLPostfix": {
          "description": "URL Postfix",
          "type": "string"
        },
        "DeploymentType": {
          "$ref": "#/definitions/DeploymentTypeExt"
        },
        "ResourceAllocationTypes": {
          "description": "Deployment allocation types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceAllocationTypeExt"
          }
        },
        "Projects": {
          "description": "Instance reference to HPC Projects",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExtendedProjectInfoExt"
          }
        }
      },
      "additionalProperties": false
    },
    "JobDetailedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "State": {
          "$ref": "#/definitions/JobStateExt"
        },
        "CreationTime": {
          "format": "date-time",
          "description": "Creation time",
          "type": "string"
        },
        "SubmitTime": {
          "format": "date-time",
          "description": "Submit time",
          "type": "string"
        },
        "StartTime": {
          "format": "date-time",
          "description": "Start time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "description": "End time",
          "type": "string"
        },
        "Submitter": {
          "description": "Submitter",
          "type": "string"
        },
        "Tasks": {
          "description": "List of task detailed reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskDetailedReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "JobExtendedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "State": {
          "$ref": "#/definitions/JobStateExt"
        },
        "Tasks": {
          "description": "List of task extended reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskExtendedReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "JobFileContentExt": {
      "type": "object",
      "properties": {
        "Content": {
          "description": "Content",
          "type": "string"
        },
        "RelativePath": {
          "description": "Relative path",
          "type": "string"
        },
        "Offset": {
          "format": "int64",
          "description": "Offset",
          "type": "integer"
        },
        "FileType": {
          "$ref": "#/definitions/SynchronizableFilesExt"
        },
        "SubmittedTaskInfoId": {
          "format": "int64",
          "description": "Submitted task info id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "JobReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "SubProject": {
          "description": "Sub project",
          "type": "string"
        },
        "Tasks": {
          "description": "List of task reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "JobSpecificationExt": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "SubProjectIdentifier": {
          "description": "Sub project identifier",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "WaitingLimit": {
          "format": "int32",
          "description": "Waiting limit",
          "type": "integer"
        },
        "WalltimeLimit": {
          "format": "int32",
          "description": "Walltime limit",
          "type": "integer",
          "readOnly": true
        },
        "NotificationEmail": {
          "description": "Notification email",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "PhoneNumber": {
          "description": "Phone number",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "NotifyOnAbort": {
          "description": "Notify on abort",
          "type": "boolean"
        },
        "NotifyOnFinish": {
          "description": "Notify on finish",
          "type": "boolean"
        },
        "NotifyOnStart": {
          "description": "Notify on start",
          "type": "boolean"
        },
        "ClusterId": {
          "format": "int64",
          "description": "Cluster id",
          "type": "integer"
        },
        "FileTransferMethodId": {
          "format": "int64",
          "description": "File transfer method id",
          "type": "integer"
        },
        "IsExtraLong": {
          "description": "Is extra long",
          "type": "boolean"
        },
        "EnvironmentVariables": {
          "description": "Array of environment variables",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariableExt"
          }
        },
        "Tasks": {
          "description": "Array of task specification models",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSpecificationExt"
          }
        }
      },
      "additionalProperties": false
    },
    "JobStateAggregationReportExt": {
      "type": "object",
      "properties": {
        "JobStateId": {
          "$ref": "#/definitions/JobStateExt"
        },
        "JobStateName": {
          "description": "Job state name",
          "type": "string"
        },
        "Count": {
          "format": "int64",
          "description": "Count",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "JobStateExt": {
      "format": "int32",
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        128,
        256
      ],
      "type": "integer"
    },
    "LexisCredentialsExt": {
      "required": [
        "OpenIdAccessToken"
      ],
      "type": "object",
      "properties": {
        "Username": {
          "description": "User name",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "OpenIdAccessToken": {
          "description": "OpenId access token",
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ModifyAccountingModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Formula": {
          "description": "Formula",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "ValidityFrom": {
          "format": "date-time",
          "description": "Validity from",
          "type": "string"
        },
        "ValidityTo": {
          "format": "date-time",
          "description": "Validity to",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ModifyClusterModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "MasterNodeName": {
          "description": "Master node name",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "SchedulerType": {
          "$ref": "#/definitions/SchedulerType"
        },
        "ConnectionProtocol": {
          "$ref": "#/definitions/ClusterConnectionProtocol"
        },
        "TimeZone": {
          "description": "Time zone",
          "maxLength": 10,
          "minLength": 0,
          "type": "string"
        },
        "Port": {
          "format": "int32",
          "description": "Port",
          "type": "integer"
        },
        "UpdateJobStateByServiceAccount": {
          "description": "Update job state by service account",
          "type": "boolean"
        },
        "DomainName": {
          "description": "Domain name",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "ProxyConnectionId": {
          "format": "int64",
          "description": "Proxy connection id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ModifyClusterNodeTypeAggregationModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "AllocationType": {
          "description": "Allocation type",
          "type": "string"
        },
        "ValidityFrom": {
          "format": "date-time",
          "description": "Validity from",
          "type": "string"
        },
        "ValidityTo": {
          "format": "date-time",
          "description": "Validity to",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ModifyClusterNodeTypeModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "NumberOfNodes": {
          "format": "int32",
          "description": "Number of nodes",
          "type": "integer"
        },
        "CoresPerNode": {
          "format": "int32",
          "description": "Number of cores per node",
          "type": "integer"
        },
        "Queue": {
          "description": "Queue",
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "QualityOfService": {
          "description": "Quality of service",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "MaxWalltime": {
          "format": "int32",
          "description": "Maximum wall time",
          "type": "integer"
        },
        "ClusterAllocationName": {
          "description": "Cluster allocation name",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "ClusterId": {
          "format": "int64",
          "description": "Cluster id",
          "type": "integer"
        },
        "FileTransferMethodId": {
          "format": "int64",
          "description": "File transfer method id",
          "type": "integer"
        },
        "ClusterNodeTypeAggregationId": {
          "format": "int64",
          "description": "Cluster node type aggregation id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ModifyClusterProxyConnectionModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Host": {
          "description": "Host",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "Port": {
          "format": "int32",
          "description": "Port",
          "type": "integer"
        },
        "Username": {
          "description": "User name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "description": "Password",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Type": {
          "$ref": "#/definitions/ProxyType"
        }
      },
      "additionalProperties": false
    },
    "ModifyCommandTemplateFromGenericModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CommandTemplateId": {
          "format": "int64",
          "description": "Command template id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "maxLength": 80,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "Description": {
          "description": "Description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "ExtendedAllocationCommand": {
          "description": "Extended allocation command",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ExecutableFile": {
          "description": "Executable file",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "PreparationScript": {
          "description": "Preparation script",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ModifyCommandTemplateModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "maxLength": 80,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "ExtendedAllocationCommand": {
          "description": "Extended allocation command",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "ExecutableFile": {
          "description": "Executable file",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "PreparationScript": {
          "description": "Preparation script",
          "maxLength": 500,
          "minLength": 0,
          "type": "string"
        },
        "ClusterNodeTypeId": {
          "format": "int64",
          "description": "Cluster node type id",
          "type": "integer"
        },
        "IsEnabled": {
          "description": "Is enabled",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ModifyCommandTemplateParameterModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Identifier": {
          "description": "Identifier",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "Query": {
          "description": "Query",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ModifyFileTransferMethodModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "ServerHostname": {
          "description": "Server hostname",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Protocol": {
          "$ref": "#/definitions/FileTransferProtocol"
        },
        "ClusterId": {
          "format": "int64",
          "description": "Cluster id",
          "type": "integer"
        },
        "Port": {
          "format": "int32",
          "description": "Port",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ModifyProjectAssignmentToClusterModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "ClusterId": {
          "format": "int64",
          "description": "Cluster id",
          "type": "integer"
        },
        "LocalBasepath": {
          "description": "Local base path",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ModifyProjectClusterNodeTypeAggregationModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "ClusterNodeTypeAggregationId": {
          "format": "int64",
          "description": "Cluster node type aggregation id",
          "type": "integer"
        },
        "AllocationAmount": {
          "format": "int64",
          "description": "Allocation amount",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ModifyProjectModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Start date",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End date",
          "type": "string"
        },
        "UsageType": {
          "$ref": "#/definitions/UsageTypeExt"
        },
        "UseAccountingStringForScheduler": {
          "description": "Use accounting string for scheduler",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "ModifySubProjectModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Identifier": {
          "description": "Identifier",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Start date",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End date",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "NodeUsedCoresAndLimitationExt": {
      "type": "object",
      "properties": {
        "CoresUsed": {
          "format": "int32",
          "description": "Number of cores used",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "OpenIdCredentialsExt": {
      "required": [
        "OpenIdAccessToken"
      ],
      "type": "object",
      "properties": {
        "Username": {
          "description": "User name",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "OpenIdAccessToken": {
          "description": "OpenId access token",
          "minLength": 1,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "OpenStackApplicationCredentialsExt": {
      "type": "object",
      "properties": {
        "ApplicationCredentialsId": {
          "description": "Application credentials id",
          "type": "string"
        },
        "ApplicationCredentialsSecret": {
          "description": "Application credentials secret",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "PasswordCredentialsExt": {
      "type": "object",
      "properties": {
        "Username": {
          "description": "User name",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "description": "Password",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ProblemDetails": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "status": {
          "format": "int32",
          "type": "integer"
        },
        "detail": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "additionalProperties": { }
    },
    "ProjectAggregatedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "AccountingString": {
          "description": "Accounting string",
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "UsageType": {
          "$ref": "#/definitions/UsageTypeExt"
        },
        "SubProjects": {
          "description": "List of sub project aggregated reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubProjectAggregatedReportExt"
          }
        },
        "Clusters": {
          "description": "List of cluster aggregated reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterAggregatedReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ProjectClusterNodeTypeAggregationExt": {
      "type": "object",
      "properties": {
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "ClusterNodeTypeAggregationId": {
          "format": "int64",
          "description": "Cluster node type aggregation id",
          "type": "integer"
        },
        "AllocationAmount": {
          "format": "int64",
          "description": "Allocation amount",
          "type": "integer"
        },
        "CreatedAt": {
          "format": "date-time",
          "description": "Created at date",
          "type": "string"
        },
        "ModifiedAt": {
          "format": "date-time",
          "description": "Modified at date",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ProjectDetailedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "AccountingString": {
          "description": "Accounting string",
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "UsageType": {
          "$ref": "#/definitions/UsageTypeExt"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Start date",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End date",
          "type": "string"
        },
        "Clusters": {
          "description": "List of cluster detailed reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterDetailedReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ProjectExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "AccountingString": {
          "description": "Accounting string",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Start date",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End date",
          "type": "string"
        },
        "UsageType": {
          "$ref": "#/definitions/UsageTypeExt"
        },
        "UseAccountingStringForScheduler": {
          "description": "Use accounting string for scheduler",
          "type": "boolean"
        },
        "CommandTemplates": {
          "description": "Array of command templates",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandTemplateExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ProjectExtendedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "AccountingString": {
          "description": "Accounting string",
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "Clusters": {
          "description": "List of cluster extended reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterExtendedReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ProjectForTaskExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "AccountingString": {
          "description": "Accounting string",
          "type": "string"
        },
        "CommandTemplate": {
          "$ref": "#/definitions/CommandTemplateExt"
        }
      },
      "additionalProperties": false
    },
    "ProjectListReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "AccountingString": {
          "description": "Accounting string",
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "ProjectReferenceExt": {
      "required": [
        "Project"
      ],
      "type": "object",
      "properties": {
        "Project": {
          "$ref": "#/definitions/ProjectExt"
        },
        "Role": {
          "$ref": "#/definitions/AdaptorUserRoleExt"
        }
      },
      "additionalProperties": false
    },
    "ProjectReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "AccountingString": {
          "description": "Accounting string",
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "UsageType": {
          "$ref": "#/definitions/UsageTypeExt"
        },
        "Clusters": {
          "description": "List of cluster reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ProjectResourceUsageExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "AccountingString": {
          "description": "Accounting string",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Start date",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End date",
          "type": "string"
        },
        "NodeTypes": {
          "description": "Array of node types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterNodeTypeResourceUsageExt"
          }
        }
      },
      "additionalProperties": false
    },
    "ProxyType": {
      "format": "int32",
      "enum": [
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "ProxyTypeExt": {
      "format": "int32",
      "enum": [
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "PublicKeyExt": {
      "type": "object",
      "properties": {
        "Username": {
          "description": "Username",
          "type": "string"
        },
        "KeyType": {
          "$ref": "#/definitions/FileTransferCipherTypeExt"
        },
        "PublicKeyOpenSSH": {
          "description": "Public key OpenSSH",
          "type": "string"
        },
        "PublicKeyPEM": {
          "description": "Public key PEM",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RegenerateSecureShellKeyModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Username": {
          "description": "User name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "description": "Password",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RegenerateSecureShellKeyModelObsolete": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "type": "integer"
        },
        "PublicKey": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RemoveAccountingModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveClusterModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveClusterNodeTypeAggregationAccountingModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ClusterNodeTypeAggregationId": {
          "format": "int64",
          "description": "Cluster node type aggregation id",
          "type": "integer"
        },
        "AccountingId": {
          "format": "int64",
          "description": "Accounting id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveClusterNodeTypeAggregationModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveClusterNodeTypeModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveClusterProxyConnectionModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveCommandTemplateModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CommandTemplateId": {
          "format": "int64",
          "description": "Command template id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveCommandTemplateParameterModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveFileTransferMethodModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveProjectAssignmentToClusterModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "ClusterId": {
          "format": "int64",
          "description": "Cluster id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveProjectClusterNodeTypeAggregationModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        },
        "ClusterNodeTypeAggregationId": {
          "format": "int64",
          "description": "Cluster node type aggregation id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveProjectModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveSecureShellKeyModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Username": {
          "description": "User name",
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "RemoveSecureShellKeyModelObsolete": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "type": "integer"
        },
        "PublicKey": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "RemoveSubProjectModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ResourceAllocationTypeExt": {
      "format": "int32",
      "enum": [
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "SchedulerType": {
      "format": "int32",
      "enum": [
        1,
        2,
        4,
        8
      ],
      "type": "integer"
    },
    "SchedulerTypeExt": {
      "format": "int32",
      "enum": [
        1,
        2,
        4,
        8
      ],
      "type": "integer"
    },
    "SshKeyUserCredentialsModel": {
      "type": "object",
      "properties": {
        "Username": {
          "description": "User name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "description": "Password",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "SubProjectAggregatedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "Clusters": {
          "description": "List of cluster aggregated reports",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterAggregatedReportExt"
          }
        }
      },
      "additionalProperties": false
    },
    "SubProjectExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Identifier": {
          "description": "Identifier",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "StartDate": {
          "format": "date-time",
          "description": "Start date",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "description": "End date",
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "description": "Project id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "SubmitJobModel": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CreatedJobInfoId": {
          "format": "int64",
          "description": "Created job info id",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "SubmittedJobInfoExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "State": {
          "$ref": "#/definitions/JobStateExt"
        },
        "CreationTime": {
          "format": "date-time",
          "description": "Creation time",
          "type": "string"
        },
        "SubmitTime": {
          "format": "date-time",
          "description": "Submit time",
          "type": "string"
        },
        "StartTime": {
          "format": "date-time",
          "description": "Start time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "description": "End time",
          "type": "string"
        },
        "TotalAllocatedTime": {
          "format": "double",
          "description": "Total allocation time",
          "type": "number"
        },
        "SubProject": {
          "description": "Sub project",
          "type": "string"
        },
        "Tasks": {
          "description": "Array of tasks",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubmittedTaskInfoExt"
          }
        }
      },
      "additionalProperties": false
    },
    "SubmittedTaskInfoExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "State": {
          "$ref": "#/definitions/TaskStateExt"
        },
        "Priority": {
          "$ref": "#/definitions/TaskPriorityExt"
        },
        "AllocatedTime": {
          "format": "double",
          "description": "Allocated time",
          "type": "number"
        },
        "AllocatedCoreIds": {
          "description": "Array of allocated core ids",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "StartTime": {
          "format": "date-time",
          "description": "Start time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "description": "End time",
          "type": "string"
        },
        "NodeType": {
          "$ref": "#/definitions/ClusterNodeTypeForTaskExt"
        },
        "ErrorMessage": {
          "description": "Error message",
          "type": "string"
        },
        "CpuHyperThreading": {
          "description": "Cpu hyper threading",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "SynchronizableFilesExt": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "type": "integer"
    },
    "TaskDetailedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "ScheduledJobId": {
          "description": "Scheduled job id",
          "type": "string"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "State": {
          "$ref": "#/definitions/TaskStateExt"
        },
        "StartTime": {
          "format": "date-time",
          "description": "Start time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "description": "End time",
          "type": "string"
        },
        "CommandTemplateId": {
          "format": "int64",
          "description": "Command template id",
          "type": "integer"
        },
        "CommandTemplateName": {
          "description": "Command template name",
          "type": "string"
        },
        "Usage": {
          "format": "double",
          "description": "Usage",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "TaskExtendedReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "State": {
          "$ref": "#/definitions/TaskStateExt"
        },
        "StartTime": {
          "format": "date-time",
          "description": "Start time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "description": "End time",
          "type": "string"
        },
        "CommandTemplateId": {
          "format": "int64",
          "description": "Command template id",
          "type": "integer"
        },
        "Usage": {
          "format": "double",
          "description": "Usage",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "TaskFileOffsetExt": {
      "type": "object",
      "properties": {
        "SubmittedTaskInfoId": {
          "format": "int64",
          "description": "Submitted task info id",
          "type": "integer"
        },
        "FileType": {
          "$ref": "#/definitions/SynchronizableFilesExt"
        },
        "Offset": {
          "format": "int64",
          "description": "Offset",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "TaskParalizationParameterExt": {
      "type": "object",
      "properties": {
        "MPIProcesses": {
          "format": "int32",
          "description": "MPI processes",
          "type": "integer"
        },
        "OpenMPThreads": {
          "format": "int32",
          "description": "Open MP threads",
          "type": "integer"
        },
        "MaxCores": {
          "format": "int32",
          "description": "Maximum cores",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "TaskPriorityExt": {
      "format": "int32",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "type": "integer"
    },
    "TaskReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Usage": {
          "format": "double",
          "description": "Usage",
          "type": "number"
        }
      },
      "additionalProperties": false
    },
    "TaskSpecificationExt": {
      "required": [
        "MaxCores"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "MinCores": {
          "format": "int32",
          "description": "Minimum number of cores",
          "type": "integer"
        },
        "MaxCores": {
          "format": "int32",
          "description": "Maximum number of cores",
          "type": "integer"
        },
        "WalltimeLimit": {
          "format": "int32",
          "description": "Walltime limit",
          "type": "integer"
        },
        "PlacementPolicy": {
          "description": "Placement policy",
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "Priority": {
          "$ref": "#/definitions/TaskPriorityExt"
        },
        "JobArrays": {
          "description": "Job arrays",
          "type": "string"
        },
        "IsExclusive": {
          "description": "Is exclusive",
          "type": "boolean"
        },
        "IsRerunnable": {
          "description": "Is rerunnable",
          "type": "boolean"
        },
        "StandardInputFile": {
          "description": "Standard input file",
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "StandardOutputFile": {
          "description": "Standard output file",
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "StandardErrorFile": {
          "description": "Standard error file",
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "ProgressFile": {
          "description": "Progress file",
          "type": "string"
        },
        "LogFile": {
          "description": "Log file",
          "type": "string"
        },
        "ClusterTaskSubdirectory": {
          "description": "Cluster task subdirectory",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ClusterNodeTypeId": {
          "format": "int64",
          "description": "Cluster node type id",
          "type": "integer"
        },
        "CommandTemplateId": {
          "format": "int64",
          "description": "Command template id",
          "type": "integer"
        },
        "CpuHyperThreading": {
          "description": "Cpu hyper threading",
          "type": "boolean"
        },
        "RequiredNodes": {
          "description": "Required nodes",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "TaskParalizationParameters": {
          "description": "Array of task paralization parameters",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskParalizationParameterExt"
          }
        },
        "EnvironmentVariables": {
          "description": "Array of environment variables",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariableExt"
          }
        },
        "DependsOn": {
          "description": "Depends on",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskSpecificationExt"
          }
        },
        "TemplateParameterValues": {
          "description": "Array of command template parameter values",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandTemplateParameterValueExt"
          }
        }
      },
      "additionalProperties": false
    },
    "TaskStateExt": {
      "format": "int32",
      "enum": [
        1,
        2,
        4,
        8,
        16,
        32,
        64,
        256
      ],
      "type": "integer"
    },
    "TestClusterAccessForAccountModelObsolete": {
      "type": "object",
      "properties": {
        "SessionCode": {
          "description": "Session code",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ProjectId": {
          "format": "int64",
          "type": "integer"
        },
        "PublicKey": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "UnauthorizedResult": {
      "type": "object",
      "properties": {
        "StatusCode": {
          "format": "int32",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "UsageTypeExt": {
      "format": "int32",
      "enum": [
        1,
        2
      ],
      "type": "integer"
    },
    "UserGroupListReportExt": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "int64",
          "description": "Id",
          "type": "integer"
        },
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "TotalUsage": {
          "format": "double",
          "description": "Total usage",
          "type": "number"
        },
        "UsageType": {
          "$ref": "#/definitions/UsageTypeExt"
        },
        "Project": {
          "$ref": "#/definitions/ProjectListReportExt"
        }
      },
      "additionalProperties": false
    },
    "VersionInformationExt": {
      "type": "object",
      "properties": {
        "Name": {
          "description": "Name",
          "type": "string"
        },
        "Description": {
          "description": "Description",
          "type": "string"
        },
        "Version": {
          "description": "Version",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}